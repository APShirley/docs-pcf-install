## Creating PCF from an AMI Jumpbox

This repository uses the Chronus bootstrap (JO: should we link to this repo?) as the starting point for simulating the customer environment to deploy an all inclusive mega-jumpbox that contains everything needed to deploy bosh and Cloud Foundry. 

**Note:** You should read this as a systems playbook and follow step by step.

## Enterprise Services for Customer-Like Environment
The following services need to be simulated for the customer-like environment:

### Directory Services
Purpose: to allow simulated intranet applications the sharing of information about users, groups, and roles through the network.

Sample implementation: LDAP.

Usage: Pivotal's User Account and Authentication (UAA) is the central identity management service for Pivotal's Elastic Runtime platform.  In the customer environment, the Cloud Foundry admin will configure the identity store in UAA to inteface with the existing LDAP environment.

Runbook: Follow the [Chiron LDAP guide] (https://github.com/pivotal-federal-field-engineering/dark-chiron-aws/blob/master/docs/ldap.md "Chiron LDAP Installation and Configuration Guide") in this repo to install and configure secure LDAP in preparation for PCF UAA integration.

Reference(s): 
* [Pivotal Web Services Documentation](http://docs.run.pivotal.io/concepts/security.html. "Pivotal Authentication and Authorization").

### Domain Name System
Purpose: hierarchical distributed naming system for computers, services, or any resource connected to the customer network.  DNS translates a domain name (eg. pivotal.io) to a corresponding IP address via a designated authoritative name service. 

Sample internal implementation: BIND.  Note: external implementation is configured using hosting provider (GoDaddy) utilities to build the requisite CNAME entry for DNS wildcarding on vi-works.io.

Usage:  A domain is not directly bound to an application, but acts as part of the route to an application.  When an application is deployed using Cloud Foundry, a hostname is supplied, which is prepended to the domain to create the full URL, or route, to the application (eg. my-app.pivotal.io).  BIND will translate the request to its corresponding computer resource on the customer's network.  

Runbook: Follow the [Chiron DNS guide] (https://github.com/pivotal-federal-field-engineering/dark-chiron-aws/blob/master/docs/dns.md "Chiron DNS Configuration Guide") in this repo to configure wildcard DNS.

Reference(s): 
* [Pivotal Web Services Documentation: Domains & Routes](http://docs.run.pivotal.io/devguide/deploy-apps/domains-routes.html. "Pivotal Domains and Routes").  
* [Pivotal Web Services Documentation: Domains & Shared Domains](http://docs.run.pivotal.io/devguide/deploy-apps/domains.html. "Pivotal Domains and Shared Domains").  

### Certificate Authority
Purpose: to issue digital certificates for use by servers and users in the Chiron environment.

Sample implementation: OpenSSL, an open source SSL/TLS implementation that comes with tools allowing its use as a simple certificate authority.

Usage: The CA will issue PKI certificates to configure secure communications between clients and the PaaS.  In the customer environment, the PWS Dark team will need to submit a certificate request to be signed by the existing CA.

Runbook: Follow the [Chiron CA Guide](https://github.com/pivotal-federal-field-engineering/dark-chiron-aws/blob/master/docs/ca.md "Chiron CA Installation and Configuration Guide") in this repo to install and configure a CA.

### DTO Box

Purpose: to provide anti-virus scanning capabilities in Chiron environment.

Sample implementation: ClamAV, an an open source antivirus engine for detecting trojans, viruses, malware & other malicious threats ([Reference](http://www.clamav.net/ "Reference")).

Usage: Run antivirus scans on user uploaded content to simulate the DTO process on the customer site.

Runbook: Follow the [Chiron DTO Guide](https://github.com/pivotal-federal-field-engineering/dark-chiron-aws/blob/master/docs/dto.md "Chiron Antivirus Installation and Configuration Guide") in this repo to launch and configure a DTO box.


## Discrepancies Between External and Internal Environments
(List what can be documented: eg. what needs to change for running a CloudFormation script in the internal AWS console).

## Pivotal CloudFoundry Installation


Follow the steps below to deploy PCF into the Chiron environment.  Use the [Pivotal Documentation](http://docs.pivotal.io/pivotalcf/customizing/cloudform.html "Pivotal Documentation") as a guide to ensure all prerequisite steps are complete before continuing.
