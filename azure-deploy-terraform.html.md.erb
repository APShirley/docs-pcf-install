---
title: Launching a BOSH Director Instance on Azure using Terraform
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This guide describes the preparation steps required to install Pivotal Cloud Foundry (PCF) on Azure using Terraform templates. 

The Terraform template for PCF on Azure describes a set of Azure resources and properties.
For more information about how Terraform creates resources in Azure, see the
[Azure Provider](https://www.terraform.io/docs/providers/azurerm/index.html) topic on the Terraform site. 

You may also find it helpful to review different deployment options in the
[Reference Architecture for Pivotal Cloud Foundry on Azure](../refarch/aws/aws_ref_arch.html).

## <a id="prereqs"></a>Prerequisites ##

In addition to fulfilling the prerequisites listed in the [Installing Pivotal Cloud Foundry on Azure](./azure.html) topic, ensure you have the following: 

* The [Terraform CLI](https://www.terraform.io/intro/getting-started/install.html)
* In your Azure project, ensure you have completed the steps in [Preparing to Deploy PCF on Azure](./azure-prepare-env.html) to create a service principal.

## <a id="download"></a>Step 1: Download and Edit the Terraform Variables File ##

Before you can run Terraform commands to create infrastructure resources, you must fill out a template variables file.

1. Navigate to the Pivotal Application Service (PAS) release on [Pivotal Network](https://network.pivotal.io).

1. Download the Azure Terraform zip file.

1. Extract the contents of the zip file and place the folder in your `workspace` directory on your local machine.

1. From a terminal window, navigate to the folder:
  <pre class="terminal">$ cd ~/workspace/TERRAFORMING-AZURE-FOLDER</pre>

1. Create a new file named `terraform.tfvars`.
  <pre class="terminal">$ touch terraform.tfvars</pre>

1. Open the `terraform.tfvars` file and paste in the following contents:

    ```
    subscription_id       = "YOUR-SUBSCRIPTION-ID"
    tenant_id             = "YOUR-TENANT-ID"
    client_id             = "YOUR-CLIENT-ID"
    client_secret         = "YOUR-CLIENT-SECRET"

    env_name              = "YOUR-ENVIRONMENT-NAME"
    location              = "YOUR-AZURE-LOCATION"
    ops_manager_image_url = "YOUR-OPS-MAN-IMAGE-URL"
    dns_suffix            = "YOUR-DNS-SUFFIX"
    vm_admin_username     = "YOUR-ADMIN-USERNAME"
    ```

1. Edit the values in the file according to the table below:
  <table>
    <tr>
      <th style="width: 35%">Value to replace</th>
      <th>Guidance</th>
    </tr>
    <tr>
      <td><code>YOUR-SUBSCRIPTION-ID</code></td>
      <td>Enter the subscription ID of your Azure service principal which Terraform will use to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-TENANT-ID</code></td>
      <td>Enter the tenant ID of your Azure service principal which Terraform will use to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-CLIENT-ID</code></td>
      <td>Enter the client ID of your Azure service principal which Terraform will use to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-CLIENT-SECRET</code></td>
      <td>Enter the client secret of your Azure service principal which Terraform will use to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-ENVIRONMENT-NAME</code></td>
      <td>Enter a name to use to identify resources in Azure. Terraform prepends the names of the resources it creates with this environment name. Example: <code>pcf</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-AZURE-LOCATION</code></td>
      <td>Enter the name of the Azure location in which you want Terraform to create resources. Example: <code>Central US</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-OPS-MAN-IMAGE-URL</code></td>
      <td>Enter the URL for the Ops Manager Azure image you want to boot. You can find this code in the PDF included with the Ops Manager release on <a href="https://network.pivotal.io/">Pivotal Network</a>.</td>
    </tr>
    <tr>
      <td><code>YOUR-DNS-SUFFIX</code></td>
      <td>Enter a domain name to use as part of the system domain for your PCF deployment. Terraform creates DNS records in Azure using <code>YOUR-ENVIRONMENT-NAME</code> and <code>YOUR-DNS-SUFFIX</code>. For example, if you enter <code>example.com</code> for your DNS suffix and have <code>pcf</code> as your environment name, Terraform will create DNS records at <code>pcf.example.com</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-ADMIN-USERNAME</code></td>
      <td>Enter the admin username you want to use for your Ops Manager deployment.</td>
    </tr>
  </table>

## <a id="download"></a>Step 2: Add Optional Variables ##

Complete this step if you want to do any of the following:

- Deploy the Isolation Segment tile

In your `terraform.tfvars` file, specify the appropriate variables from the sections below.

<p class="note"><strong>Note</strong>: You can see the configurable options by opening the <code>variables.tf</code> file and looking for variables with default values.</p>

### <a id="iso_seg"></a> Isolation Segments

If you plan to deploy the Isolation Segment tile, add the following variable to your `terraform.tfvars` file.
This causes terraform to create an additional HTTP load balancer and DNS record to use for the Isolation Segment tile. 

```
isolation_segment = "true"
```

## <a id="download"></a>Step 3: Create Azure Resources with Terraform ##

Follow these steps to use the Terraform CLI to create resources on Azure:

1. From the directory that contains the Terraform files, run `terraform init` to initialize the directory based on the information you specified in the `terraform.tfvars` file. 
  <pre class="terminal">$ terraform init</pre>

1. Run `terraform plan -out=plan` to create the execution plan for Terraform.
  <pre class="terminal">$ terraform plan -out=plan</pre>

1. Run `terraform apply plan` to execute the plan from the previous step. It may take several minutes for Terraform to create all the resources in Azure. 
  <pre class="terminal">$ terraform apply plan</pre>

## <a id="dns"></a>Step 5: Create DNS Record ##

1. In a browser, navigate to the DNS provider for the DNS suffix you entered in your `terraform.tfvars` file.

1. Create a new NS (Name server) record for your PCF system domain. Your system domain is `YOUR-ENVIRONMENT-NAME.YOUR-DNS-SUFFIX`.

1. In this record, enter the name servers included in `env_dns_zone_name_servers` from your Terraform output.

## <a id="next"></a> What to Do Next ##

Proceed to the next step in the deployment, [Configuring BOSH Director on Azure (Terraform)](./azure-om-config-terraform.html). 

