#encoding: utf-8
---
title: Advanced Troubleshooting with the BOSH CLI
---

Recall that you started configuring your first install in the Operations Manager by clicking the `VMware vSphere` tile. This configuration is for the VM that Operations Manager uses to perform all subsequent installs and updates. A process on that VM called BOSH Director does the work. To perform advanced troubleshooting, you can log into BOSH Director to perform diagnostic commands in the BOSH Command-Line Interface (CLI).

If you are unable to resolve an issue by viewing configurations, exploring logs, or reviewing common problems, the BOSH CLI can help you troubleshoot in more depth.

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Note:** Do not manually modify the deployment manifest.
Operations Manager will overwrite manual changes to this manifest. In addition, manually changing the manifest may cause future deployments to fail.

  1. From the procedures described below, decide what information you need from the Operations Manager Installation Dashboard, and collect that information.
  1. Verify that no alerts are flashing in Operations Manager that indicate installations or updates in progress.
  1. Verify that no BOSH processes are running on the Pivotal CF VM.
  1. Log out of the Operations Manager.

An alternative for those with the requisite skills is to obtain and run an Open Source BOSH CLI separately from the one available in Pivotal CF.

## <a id='prepare'></a>Preparing to use the BOSH CLI ##

Using the BOSH CLI requires fairly lengthy preparation.

Before you begin, write down:

* The IP address of the Pivotal CF VM shown in the `Settings` tab of the VMware vSphere tile.
* Your ova import credentials—that is, the username and password used to import the Pivotal CF `.ova` file into vCenter.
* The IP address shown for the "Ops Manager" job in the `Status` tab of the VMware vSphere tile—this is in fact the IP address of the VM where BOSH Director is running.
* The BOSH Director credentials, shown on the `Credentials` tab of the VMware vSphere tile.

First, connect to the VM where the Operations Manager web application is running:

1. Open a terminal.
1. Connect to the Pivotal CF installation VM with SSH with your ova import username:

 `ssh <ova_import_username>@<Pivotal_CF_VM_IP_address>`
1. Enter your ova import password when prompted.

**Note:** you can perform a similar procedure in a vSphere console.

Then log into BOSH Director:

1. Set the `BUNDLE_GEMFILE` variable to point to the BOSH gemfile for the web application:

 `export BUNDLE_GEMFILE=/home/tempest-web/tempest/web/bosh.Gemfile`
1. Point BOSH to your Ops Manager:

 `bundle exec bosh target <Ops_Manager_IP_Address>`
1. Log in using the BOSH Director credentials.

**Note:** An alternative to Step 1 is to prepend `BUNDLE_GEMFILE=./bosh.Gemfile` to all BOSH commands.

Continue by setting BOSH Director to apply CLI commands to the deployment you want to troubleshoot. Here, "deployment" means a particular installation of a particular product. Put another way, each tile in your Operations Manager Installation Dashboard corresponds to a deployment, which is in turn described by a YAML file.

* An Elastic Runtime installation is described by a file whose name has the form `cf-<20-character_random_string>.yml`
* A MySQL Dev installation is described by a file whose name has the form`cf_services-<20-character_random_string>.yml`
* Other installations are described by files whose names have the form `<20-character_random_string>.yml`

To identify the YAML file that describes your deployment, grep for the appropriate filename.

* This command identifies Elastic Runtime deployments:

 `ls -al /var/tempest/workspaces/default/deployments/ | grep cf-*.yml`

Where there are more than one installations of the same product, use the one whose release version, as specified in the YAML file, matches what is shown on the Operations Manager tile. Now you know which filename to use for the final step of preparation for using the BOSH CLI.

* Set BOSH director to run CLI commands against the deployment whose YAML file you have just identified:

 `bundle exec bosh deployment /var/tempest/workspaces/default/deployments/<deployment_filename>.yml`

## <a id='bosh_cli'></a>Overview of the BOSH CLI ##

Three BOSH CLI commands are helpful in troubleshooting. All provide output that is scoped to the current deployment.

* `BOSH CCK (Cloudcheck)` detects differences between the world that Director expects and the actual state of the world
* `BOSH VMS` provides an overview of the virtual machines BOSH is managing
* `BOSH SSH` provides simplified access to the VM, including the ability to run `sudo`

These commands respond by identifying one or more of five possible actions you can take:

* `Reboot VM`: **In most cases, try this first**. The error could be transient.
* `Ignore problem`: Do nothing. You might want to ignore the problem in order to run `bosh ssh` and attempt troubleshooting on the machine. If performing other steps continually brings the machine to this state, you could have a configuration problem that will be hard to detect without looking at the agent logs.
* `Reassociate VM with corresponding instance`: If you believe that the VM is correctly associated with the job, and that the BOSH DB is in error, this is a good option.
* `Recreate VM using last known apply spec`: Destroy the server and have BOSH recreate it from the deployment manifest the installer provides. If the machine is corrupted, this is the best option.
* `Delete VM reference (DANGEROUS!)`: Select this option only if you know that the BOSH database has a stale reference causing it to expect that an agent should be running on this machine. Once you delete the VM reference, you can no longer control the machine using BOSH.

The remainder of this topic explains the commands and provides examples.

### <a id='bosh_cck'></a>bosh cck (cloudcheck) ###

This command attempts to detect any differences between the world the director expects for this deployment and the actual state of the world. For each difference it detects, `bosh cck` offers a potential resolution. The examples below show how `cloudcheck` responds in a different scenario.

#### <a id='unresponsive_agent'></a>Unresponsive Agent ####

<pre class="terminal">
	$ bosh cck
	ccdb/0 (vm-3e37133c-bc33-450e-98b1-f86d5b63502a) is not responding:

	- Ignore problem
	- Reboot VM
	- Recreate VM using last known apply spec
	- Delete VM reference (DANGEROUS!)
</pre>

#### <a id='missing_vm'></a>Missing VM ####

<pre class="terminal">
	$ bosh cck
	VM with cloud ID `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' missing:

	- Ignore problem
	- Recreate VM using last known apply spec
	- Delete VM reference (DANGEROUS!)
</pre>

#### <a id='unbound_instancevm'></a>Unbound Instance VM ####

<pre class="terminal">
	$ bosh cck
	VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' reports itself as `ccdb/0' but does not have a bound instance:

	- Ignore problem
	- Delete VM (unless it has persistent disk)
	- Reassociate VM with corresponding instance
</pre>

#### <a id='out_of_sync'></a>Out of Sync VM ####

<pre class="terminal">
	$ bosh cck
	VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' is out of sync: expected `cf-d7293430724a2c421061: ccdb/0', got `cf-d7293430724a2c421061: nats/0':

	- Ignore problem
	- Delete VM (unless it has persistent disk)
</pre>

### <a id='bosh_vms'></a>bosh vms ###

This command provides an overview of the virtual machines BOSH is managing as part of the current deployment. When you are experiencing issues, `bosh vms` may show VMs in an `unknown` state. If that happens, run `bosh cck` to attempt to diagnose the problem.

Additionally, you can use `bosh vms` to identify which VMs are available for you to `bosh ssh` into for further troubleshooting.

<pre class="terminal">
	$ bosh vms
	Deployment `cf-d7293430724a2c421061'

	Director task 99

	Task 99 done

	+----------------------+---------+--------------------+---------------+
	| Job/index        	| State   | Resource Pool  	| IPs           |
	+----------------------+---------+--------------------+---------------+
	| ccdb/0           	| running | ccdb           	| 192.168.86.22 |
	| cloud_controller/0    | running | cloud_controller  | 192.168.86.23 |
	| collector/0      	| running | collector      	| 192.168.86.25 |
	| consoledb/0      	| running | consoledb      	| 192.168.86.29 |
	| dea/0            	| running | dea            	| 192.168.86.47 |
	| health_manager/0 	| running | health_manager 	| 192.168.86.20 |
	| loggregator/0    	| running | loggregator    	| 192.168.86.31 |
	| loggregator_router/0  | running | loggregator_router| 192.168.86.32 |
	| nats/0           	| running | nats           	| 192.168.86.19 |
	| nfs_server/0     	| running | nfs_server     	| 192.168.86.21 |
	| router/0         	| running | router         	| 192.168.86.16 |
	| saml_login/0     	| running | saml_login     	| 192.168.86.28 |
	| syslog/0         	| running | syslog         	| 192.168.86.24 |
	| uaa/0            	| running | uaa            	| 192.168.86.27 |
	| uaadb/0          	| running | uaadb          	| 192.168.86.26 |
	+----------------------+---------+--------------------+---------------+

	VMs total: 15
	Deployment `cf_services-2c3c918a135ab5f91ee1'

	Director task 100

	Task 100 done

	+-----------------+---------+---------------+---------------+
	| Job/index   	| State   | Resource Pool | IPs       	|
	+-----------------+---------+---------------+---------------+
	| mysql_gateway/0 | running | mysql_gateway | 192.168.86.52 |
	| mysql_node/0	| running | mysql_node	| 192.168.86.53   |
	+-----------------+---------+---------------+---------------+

	VMs total: 2
</pre>

You can also run this command with arguments to retrieve additional information:

 - `--details`: Returns detailed VM information (Cloud ID, Agent ID, Resurrection Enabled?)

 - `--vitals`: Returns VM vitals information (Load, CPU, Memory Usage, Swap Usage, Disk Usage)

Refer to the **Status** tab of the **Elastic Runtime** product tile to view information similar to the `bosh vms` output.

### <a id='bosh_ssh'></a>bosh ssh ###

This command simplifies the process of accessing the VM using SSH. `bosh ssh` also gives you `sudo` access.

To use `bosh ssh`:

1. Run `ssh-keygen -t rsa` to provide BOSH with the correct public key.

1. Accept the defaults.

1. Run `bosh ssh dea/0 --public_key ~/.ssh/id_rsa.pub` to SSH into the first DEA machine. To SSH into a different machine, substitute the coordinates you retrieve from `bosh vms`.

1. You are prompted to create a password for the temporary user `bosh ssh` creates. You will use temporary user later if you need to run `sudo -i`.

Pivotal CF saves the public key choice for subsequent executions of `bosh ssh`.