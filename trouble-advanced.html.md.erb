#encoding: utf-8
---
title: Advanced Troubleshooting with the BOSH CLI
---

_This page assumes you are running cf v6._

You must log into the BOSH Director and run specific commands using the BOSH Command-Line Interface (CLI) to perform advanced troubleshooting.

The BOSH Director runs on the VM that Ops Manager deploys on the first install of the Ops Manager Director tile.
BOSH Director diagnostic commands have access to information about your entire Pivotal CF installation.
Alternatively, you can obtain and run an Open Source BOSH CLI separately from the one available in Pivotal CF.

**Note**: For more troubleshooting information, refer to the [Troubleshooting Guide](./troubleshooting.html).

## <a id='prepare'></a>Preparing to use the BOSH CLI ##

This section guides you through preparing to use the BOSH CLI.

### <a id='info'></a>Gather Information ###

Before you begin the troubleshooting process, collect the information you need from the Ops Manager interface. You must log out of the Ops Manager interface to use the BOSH CLI.

1. Browse to the Ops Manager interface. Ensure that there are no installations or updates in progress.

1. Select **Ops Manager Director > Status**.

1. Note the IP address for the Ops Manager Director job. This is the IP address of the VM where BOSH Director is running.

	<%= image_tag("ops-mgr-job-ip.png") %>

1. Select the **Credentials** tab.

1. Note the BOSH Director credentials.

    <%= image_tag("bosh-creds.png") %>

1. Log out of Ops Manager.

### <a id='ssh'></a>SSH into Ops Manager ###

To connect to the VM where the Operations Manager web application runs:

1. Open a terminal.
1. SSH to the Ops Manager installation VM with your vCenter or vCHS username and the Ops Manager IP address:

    `ssh <ova_import_username>@<Pivotal_CF_VM_IP_address>`

1. Enter your vCenter or vCHS password when prompted.

### <a id='log-in'></a>Log into the BOSH Director ###

1. Set the `BUNDLE_GEMFILE` environment variable to point to the BOSH gemfile for the Ops Manager interface:

    `export BUNDLE_GEMFILE=/home/tempest-web/tempest/web/bosh.Gemfile`

    **Note:** An alternative is to prepend `BUNDLE_GEMFILE=./bosh.Gemfile` to all BOSH commands.

1. Verify that no BOSH processes are running on the Ops Manager VM. You should not proceed with troubleshooting until all BOSH processes have completed or you have ended them.

1. Target your Ops Manager web application using the BOSH Director:

    `bundle exec bosh target <Ops_Manager_IP_Address>`

1. Log in using the BOSH Director credentials.

### <a id='product'></a>Select a Product Deployment to Troubleshoot ###

When you import and install a product using Ops Manager, you deploy an instance of the product described by a YAML file.
 Examples of available products include Elastic Runtime, MySQL, or any other service that you imported and installed.

To select a product deployment to troubleshoot:

1. Identify the YAML file that describes the deployment you want to troubleshoot.

    You identify the YAML file that describes a deployment by its filename.
    For example, this command identifies Elastic Runtime deployments:

    `find /var/tempest/workspaces/default/deployments -name cf-*.yml`

    The table below shows the naming conventions for deployment files.

    <table border="1" class="nice" >
<tr>
  <th>Product</th><th>Deployment Filename Convention</th>
</tr>
<tr>
  <td>Elastic Runtime</td><td>cf-&lt;20-character_random_string&gt;.yml</td>
</tr>
<tr>
  <td>MySQL Dev</td><td>cf_services-&lt;20-character_random_string&gt;.yml</td>
</tr>
<tr>
  <td>Other</td><td>&lt;20-character_random_string&gt;.yml</td>
</tr>
</table>

    **Note**: Where there is more than one installation of the same product,
    note the release number shown on the product tile in Operations Manager.
    Then, from the YAML files for that product, find the one that specifies
    the same release version as the product tile.

1. Set the BOSH director to run CLI commands against the YAML file you have just identified.

Now you know the filename of the YAML file that describes the deployment you want to troubleshoot.
Set the BOSH Director to apply CLI commands to that file with the bosh deployment command:

 `bosh deployment <deployment_filename>.yml`

For example:

 `bosh deployment cf-cca18e39287264623408.yml`

## <a id='bosh_cli'></a>BOSH CLI Commands for Troubleshooting##

Three BOSH CLI commands are helpful in troubleshooting. All provide output that is scoped to the current deployment.

* `bosh cck` detects differences between the world that Director expects and the actual state of the world
* `bosh vms` provides an overview of the virtual machines BOSH is managing
* `bosh ssh` provides simplified access to the VM, including the ability to run `sudo`

The remainder of this topic explains the commands and provides examples.

### <a id='bosh_cck'></a>bosh cck (Cloudcheck) ###

This command attempts to detect any differences between the world the director expects for this deployment and the actual state of the world. For each difference it detects, `bosh cck` offers a potential resolution. The examples below show how `bosh cck` responds in a different scenario.

These commands respond by identifying one or more of five possible actions you can take:

* `Reboot VM`: **In most cases, try this first**. The error could be transient.
* `Ignore problem`: Do nothing. You might want to ignore the problem in order to run `bosh ssh` and attempt troubleshooting on the machine. If performing other steps continually brings the machine to this state, you could have a configuration problem that will be hard to detect without looking at the agent logs.
* `Reassociate VM with corresponding instance`: If you believe that the VM is correctly associated with the job, and that the BOSH DB is in error, this is a good option.
* `Recreate VM using last known apply spec`: Destroy the server and have BOSH recreate it from the deployment manifest the installer provides. If the machine is corrupted, this is the best option.
* `Delete VM reference (DANGEROUS!)`: Select this option only if you know that the BOSH database has a stale reference causing it to expect that an agent should be running on this machine. Once you delete the VM reference, you can no longer control the machine using BOSH.

#### <a id='unresponsive_agent'></a>Unresponsive Agent ####

<pre class="terminal">
	$ bosh cck
	ccdb/0 (vm-3e37133c-bc33-450e-98b1-f86d5b63502a) is not responding:

	- Ignore problem
	- Reboot VM
	- Recreate VM using last known apply spec
	- Delete VM reference (DANGEROUS!)
</pre>

#### <a id='missing_vm'></a>Missing VM ####

<pre class="terminal">
	$ bosh cck
	VM with cloud ID `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' missing:

	- Ignore problem
	- Recreate VM using last known apply spec
	- Delete VM reference (DANGEROUS!)
</pre>

#### <a id='unbound_instancevm'></a>Unbound Instance VM ####

<pre class="terminal">
	$ bosh cck
	VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' reports itself as `ccdb/0' but does not have a bound instance:

	- Ignore problem
	- Delete VM (unless it has persistent disk)
	- Reassociate VM with corresponding instance
</pre>

#### <a id='out_of_sync'></a>Out of Sync VM ####

<pre class="terminal">
	$ bosh cck
	VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' is out of sync: expected `cf-d7293430724a2c421061: ccdb/0', got `cf-d7293430724a2c421061: nats/0':

	- Ignore problem
	- Delete VM (unless it has persistent disk)
</pre>

### <a id='bosh_vms'></a>bosh vms ###

This command provides an overview of the virtual machines BOSH is managing as part of the current deployment. When you are experiencing issues, `bosh vms` may show VMs in an `unknown` state. If that happens, run `bosh cck` to attempt to diagnose the problem.

Additionally, you can use `bosh vms` to identify which VMs are available for you to `bosh ssh` into for further troubleshooting.

<pre class="terminal">
	$ bosh vms
	Deployment `cf-d7293430724a2c421061'

	Director task 99

	Task 99 done

	+----------------------+---------+--------------------+---------------+
	| Job/index        	| State   | Resource Pool  	| IPs           |
	+----------------------+---------+--------------------+---------------+
	| ccdb/0           	| running | ccdb           	| 192.168.86.22 |
	| cloud_controller/0    | running | cloud_controller  | 192.168.86.23 |
	| collector/0      	| running | collector      	| 192.168.86.25 |
	| consoledb/0      	| running | consoledb      	| 192.168.86.29 |
	| dea/0            	| running | dea            	| 192.168.86.47 |
	| health_manager/0 	| running | health_manager 	| 192.168.86.20 |
	| loggregator/0    	| running | loggregator    	| 192.168.86.31 |
	| loggregator_router/0  | running | loggregator_router| 192.168.86.32 |
	| nats/0           	| running | nats           	| 192.168.86.19 |
	| nfs_server/0     	| running | nfs_server     	| 192.168.86.21 |
	| router/0         	| running | router         	| 192.168.86.16 |
	| saml_login/0     	| running | saml_login     	| 192.168.86.28 |
	| syslog/0         	| running | syslog         	| 192.168.86.24 |
	| uaa/0            	| running | uaa            	| 192.168.86.27 |
	| uaadb/0          	| running | uaadb          	| 192.168.86.26 |
	+----------------------+---------+--------------------+---------------+

	VMs total: 15
	Deployment `cf_services-2c3c918a135ab5f91ee1'

	Director task 100

	Task 100 done

	+-----------------+---------+---------------+---------------+
	| Job/index   	| State   | Resource Pool | IPs       	|
	+-----------------+---------+---------------+---------------+
	| mysql_gateway/0 | running | mysql_gateway | 192.168.86.52 |
	| mysql_node/0	| running | mysql_node	| 192.168.86.53   |
	+-----------------+---------+---------------+---------------+

	VMs total: 2
</pre>

You can also run this command with arguments to retrieve additional information:

 - `--details`: Returns detailed VM information (Cloud ID, Agent ID, Resurrection Enabled?)

 - `--vitals`: Returns VM vitals information (Load, CPU, Memory Usage, Swap Usage, Disk Usage)

Refer to the **Status** tab of the **Elastic Runtime** product tile to view information similar to the `bosh vms` output.

### <a id='bosh_ssh'></a>bosh ssh ###

This command simplifies the process of accessing the VM using SSH. `bosh ssh` also gives you `sudo` access.

To use `bosh ssh`:

1. Run `ssh-keygen -t rsa` to provide BOSH with the correct public key.

1. Accept the defaults.

1. Run `bosh ssh dea/0 --public_key ~/.ssh/id_rsa.pub` to SSH into the first DEA machine. To SSH into a different machine, substitute the coordinates you retrieve from `bosh vms`.

1. You are prompted to create a password for the temporary user `bosh ssh` creates. You use this temporary user later if you need to run `sudo -i`.

Pivotal CF saves the public key choice for subsequent executions of `bosh ssh`.

