---
title: Pivotal Cloud Foundry on Azure Marketplace Deployment Guide
owner: Partners
---

 <p class="note"><strong>Note</strong>: This document is preliminary. Official Azure support is expected to be released in September, 2016. PCF on Azure is currently supported via the Pivotal Cloud Foundry Solutions consulting teams.</p>

This topic describes how to deploy Pivotal Cloud Foundry (PCF) on Microsoft Azure. This deployment is suitable for proof-of-concept or trial workloads, not for production.

The installed components include:

* [Elastic Runtime](http://docs.pivotal.io/pivotalcf/installing/pcf-docs.html)
* [RabbitMQ](http://docs.pivotal.io/rabbitmq-cf/index.html)
* [MySQL](http://docs.pivotal.io/p-mysql/index.html)
* [Redis](http://docs.pivotal.io/redis/)
* [Spring Cloud Services](http://docs.pivotal.io/spring-cloud-services/)

Additionally, the Azure resource footprint consist of the following items:

* 1 Storage Account
* 3 Public IPs
* 1 “jumpbox” VM that runs the deployment using [BOSH](http://bosh.io/)

**The deployment uses a total of 53 VMs, of which 38 are up and running at the end of the deployment. The other 15 VMs are created to run jobs and errands and are subsequently destroyed.** Quota will be checked before deploying Pivotal Cloud Foundry. Please make sure to check the output section of the template deployment. For quota failures, you will see this message: "CRITICAL Insufficient Quota, PCF will NOT deploy"

<%= image_tag("azure/image_4.png") %>

##<a id='prereqs'></a>Prerequisites##

You must have the following in order to use PCF on Azure:

* Pay-as-you-go subscription on your Azure account.
* Sufficiently high quota limits (Recommended: 100 cores) on your Azure account. Installing Pivotal Cloud Foundry requires more than the default 20 cores.
	* Please see this [link](https://blogs.msdn.microsoft.com/girishp/2015/09/20/increasing-core-quota-limits-in-azure/) for instructions on requesting a core quota increase.
	* For more information on Azure subscription and service limits, quota, and constraints, please see [here](https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/).
* Pivotal Network Account: If you do not already have an account, [create one](https://network.pivotal.io/). You will need the API token located in your profile.
	* Navigate to your name in the top right and select **Edit Profile**. The API token is located at the bottom of the page.
* Install either the Azure CLI or Azure PowerShell on your machine, using the instructions [here](https://azure.microsoft.com/en-us/documentation/articles/powershell-install-configure/).
Create an Azure Service Principal (TENANT-ID, CLIENT-ID, CLIENT-SECRET):
	* For Linux/Unix, use this [shell script](https://github.com/cf-platform-eng/bosh-azure-template/blob/master/create_azure_principal.sh).
	* For Windows, use this [PowerShell script](https://github.com/cf-platform-eng/bosh-azure-template/blob/master/create_azure_principal_powershell.txt).

##<a id='getting-started'></a>Getting Started ##

* A Pivotal Network account: If you do not already have an account, [create one](https://network.pivotal.io/). Retrieve the API token for your profile by performing the following steps:
    1. Sign into the Pivotal Network.
    1. Navigate to your name in the top right and click **Edit Profile**.
    1. Record the API token located at the bottom of the page.

* An Azure command line tool on your machine.
     * For Linux/Unix/Mac OS X, follow these [instructions](https://azure.microsoft.com/en-us/documentation/articles/xplat-cli-install/) to install the Azure CLI.
     * For Windows, follow these [instructions](https://azure.microsoft.com/en-us/documentation/articles/powershell-install-configure/) to install the Azure PowerShell.
     * Use azure-sp-tool, follow these [instructions](https://github.com/danhigham/azure-sp-tool) to create service principal. The service principal is outputed to azure-credentials.json file.

* Sufficient resources for your Azure account. PCF on Azure allocates the following resources during deployment:
  * 53 VMs: The deployment uses a total of 53 VMs during the installation.
15 VMs are created to run jobs and errands and are subsequently destroyed. 38 VMs continue to run after installation.
  * 1 storage account
  * 3 public IPs
  * 1 jumpbox VM that runs the deployment using [BOSH](http://bosh.io/)

This deployment creates a new storage account. To ensure that the name is globally unique, use a unique prefix that contains letters and numbers and is no more than 10 characters long. You can learn about Azure Storage Accounts [here](https://azure.microsoft.com/en-us/documentation/articles/storage-create-storage-account/).

SSH public key:

An SSH RSA public key file, as a string, is required. The parameter <code>sshKeyData</code> should be a string starting with ssh-rsa.

* When filling in the Details section of the Support Request Description, provide the following information to expedite your request,
replacing REGION with your region of choice:
* Max OSX: ssh-keygen -t rsa -b 2048
* Windows: use [puttygen](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)

Then, locate your public key in <code>~/.ssh/id_rsa.pub</code>. Copy and paste it as <code>sshKeyData</code>.

1. Log in to your Microsoft Azure [portal](https://portal.azure.com).
1. Select the Azure Marketplace tile.
1. Search for “Pivotal Cloud Foundry” and select **Pivotal Cloud Foundry on Microsoft Azure** or
navigate directly to the [Pivotal Cloud Foundry on Azure Marketplace](https://azure.microsoft.com/en-us/marketplace/partners/pivotal/pivotal-cloud-foundryazure-pcf/) page.
 <%= image_tag("azure/marketplace.png") %>
4. Click **Deploy >**.

5. Enter the following **User Inputs**:
    * **Storage Account Name Prefix**: Installing PCF on Microsoft Azure creates a new storage account. Use a unique prefix that contains lower-case letters and numbers and is no more
than 10 characters long. For more information, see [About Azure storage accounts](https://azure.microsoft.com/en-us/documentation/articles/storage-create-storage-account/).
    * **SSH public key**: You must generate 2048-bit RSA public and private key files.
    	* Linux/Unix/Mac OS X: From the command line, run `$ ssh-keygen -t rsa -b 2048`. Locate your public key in `~/.ssh/id_rsa.pub` and paste the contents into the parameter **sshKeyData**.
    	* Windows: Download, install, and use [PuTTYgen](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html).
Locate your public key file and paste the contents into the parameter **sshKeyData**.
    * **Service Principal**: Upload the `azure-credentials.json` file that you created from [Prerequisites](#prereqs) section.
    * **Pivotal Network Token**: Enter the API token of your Pivotal Network Account that you recorded in the [Prerequisites](#prereqs) section.
    * **Resource Group**: Use a new resource group with a unique name for each new deployment. For more information about Azure resource groups,
see [Manage Azure resources through portal](https://azure.microsoft.com/en-us/documentation/articles/resource-group-portal/).
    * **Location**: Choose which Azure location you want to deploy to. If you requested a quota increase, you must choose the same region that you submitted in your request.
1. Click **OK** and review the Summary Page.
7. Click **OK** and read the Terms of Use and Privacy Policy.
8. Click **Create** to be directed to the main Azure portal page, where a new tile shows the deployment is in progress.
<p class="note"><strong>Note</strong>: The tile deployment progress shows completed when the initial jumpbox VM is provisioned.
This does not indicate the deployment is complete.</p>

    The full deployment takes approximately two hours.

9. Check the **Outputs** section of the deployment template. Azure confirms your quota before deploying PCF.
If you see this message in the **Outputs** section of the deployment template `CRITICAL Insufficient Quota, PCF will NOT deploy`, you need to raise your quota.
See <a href="#raising-quota">Raise Your Quota</a>.

    <%= image_tag("azure/quota.png") %>

10. (Optional) In the **Outputs** section of the deployment template, navigate to the URL shown in **PROGRESSMONITORURL** textbox.
In the tmux session on this page, follow the progress of the deployment.
The deployment is complete when the Apps Manager URL is written to the page.

##<a id='verify'></a>Verify the PCF on Microsoft Azure Installation ##

1. From your Azure Portal, navigate to **Resource Groups** and ensure the new **Resource Group** has been created.
	<%= image_tag("azure/resource_group.png") %>

2. SSH into the jumpbox VM by performing the following steps:
	1. Navigate to **Resource groups** > **cf** > **Deployment history** and select your deployment.
	1. Under the **Outputs** section, record the **JUMPBOX-FQDN**. This is the fully qualified domain name (FQDN) for the jumpbox VM.
	1. Use a SSH client to open an SSH connection to the jumpbox VM, with the username `pivotal`. <br>
          * Linux/Unix/Mac OS X: For example, run the command `$ ssh pivotal@myjumpboxujnk2hiwzqq3y.westus.cloudapp.azure.com`.
          * Windows: For example, use PuTTY to SSH into the jumpbox VM. Locate your public key file and paste the contents into the appropriate text field in PuTTY.

    <%= image_tag("azure/jumpbox.png") %>

3. View the PCF deployment log on the jumpbox VM at <code>/home/pivotal/pcf\_install.log</code>.

4. Find the Apps Manager URL and the admin password:

  1. In the Azure Portal, return to the **Outputs** section of your deployment.
  2. Navigate to the URL shown in **PROGRESSMONITORURL** textbox. This is the URL to a tmux session in which you find the Apps Manager URL and admin password that
you use to log in to the Apps Manager console.
 If the URL not longer shows the tmux session, see [Cannot find the admin password or Apps Manager URL](#cantfindpsswd) below.

6. From your Azure Portal, navigate to **Resources** and find the **Public IP address** resource named <code>YOUR-JUMPBOX-NAME–cf</code> and select it.
	<%= image_tag("azure/app_manager_one.png") %>
7. Record the **IP address**. This is the IP address of Apps Manager.
	<%= image_tag("azure/app_manager_two.png") %>
8. Navigate to the URL `https://apps.system.APPS-MANAGER-IP-ADDRESS.cf.pcfazure.com`, and log in to Apps Manager with the username `admin` and the password obtained above.

9. From Apps Manager, verify that your services are running.
<%= image_tag("azure/console.png") %>

##<a id='delete'></a>Delete a Deployment of PCF on Microsoft Azure

To remove the deployment, navigate to your Azure Portal and delete the **Resource Group** associated with the deployment.

Copy from the output of the previously run Service Principal creation script.

Client ID:

Copy from the output of the previously run Service Principal creation script.

Client Secret:

Copy from the output of the previously run Service Principal creation script.

Pivotal Network Token:

Copy from the Pivotal Network “Edit Profile” page, as previously described.

Resource Group:

Make sure to use a new resource group with a unique name for each new deployment to avoid resource name collisions. Learn more about Azure Resource groups [here](https://azure.microsoft.com/en-us/documentation/articles/resource-group-portal/).

**Symptom:** PCF on Azure fails to deploy.

**Solution**: If the deployment fails after the jumpbox VM has been created, capture the PCF deployment log as described in the [verification procedure above](#verify) and send it to azure-inquiry@pivotal.io with any additional information about the installation that you can provide.

1. In your Azure Portal, navigate to Resource Groups and make sure the new Resource Group is created successfully.
	<%= image_tag("azure/image_0.png") %>

1. SSH to the jumpbox. The fully qualified domain name (FQDN) for the jumpbox can be found on the Outputs section of the deployment.
	1. Click **Last Deployment -> Succeeded -> [YOUR DEPLOYMENT]**.
	1. The user name is pivotal.
	1. ssh pivotal@FQDN. For example: `ssh pivotal@myjumpboxujnk2hiwzqq3y.westus.cloudapp.azure.com`
 <%= image_tag("azure/image_1.png") %>

1. The entire PCF deployment log, <code>pcf_install.log</code>, is located at <code>/home/pivotal</code>.

1. At the end of deployment following information gets printed on tmux session. This is used to log in to the Apps Manager console. For example:
 <pre class="terminal">
   print "============================================================"
   print "Apps Manager URL : {0}".format(apps_manager_address)
   print "Admin password   : {0}".format(admin_password)
   print "Documentation    : http://docs.pivotal.io/pivotalcf/installing/pcf-docs.html"
   print "============================================================"
 </pre>

1. If the tmux session is lost, grep the admin password for Apps Manager from the manifest. For example:
 <pre class="terminal">
  cat manifests/elastic-runtime.yml | grep admin
  admin\_user: admin
  admin\_password: "example_password"
 </pre>
