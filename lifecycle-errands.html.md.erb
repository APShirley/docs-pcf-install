---
title: Understanding Lifecycle Errands
---

Lifecycle errands are scripts that run at designated points in time during a
product installation.
Errands are created as part of a product package, and products can only use the
errands they ship with.
Not all products ship with errands.

For more information about creating product packages, see [Packaging Pivotal One Products](../packaging/index.html).

Configure lifecycle errands for a product on the **Settings** tab for the
product in Ops Manager.
**Note**: Ops Manager only displays **Lifecycle Errands** settings for products
with configurable errands.

<%= image_tag("example-errand.png") %>

<br />
Products can have two kinds of lifecycle errands:

<a id='post-install'>**Post-Install**</a>: Post-install errands run after a
product installs, before Ops Manager makes the product available for use.
Post-install errands run by default.
To prevent a post-install errand from running, deselect the checkbox for the
errand before installing the product.
Typical post-install errands include smoke or acceptance tests, databases
initialization or database migration, and service broker registration.

<a id='pre-delete'>**Pre-Delete**</a>: Pre-delete errands run after you choose
to delete a product, before Ops Manager deletes the product.
Pre-delete errands run by default, and cannot be prevented from running.
Typical pre-delete errands include clean up of application artifacts and service
broker de-registration.

## Post-Install Errand Example ##

Pivotal MySQL has a **Broker Registrar** post-install errand.
This errand registers the service broker with the Cloud Controller and makes
service plans public.
After successfully installing Elastic Runtime, but before making Elastic Runtime
available for use, Ops Manager runs the **Broker Registrar** post-install
errand.

If you deselect the checkbox for the **Broker Registrar** errand before
installing Elastic Runtime, the service broker is not registered with the Cloud
Controller, and the service plans are not made public.

## Pre-Delete Errand Example ##

Pivotal MySQL has a Broker **Deregistrar** pre-delete errand. This errand:

* Purges the service offering
* Purges all service instances
* Purges all application bindings
* Deletes the service broker from the Cloud Controller

When you choose to delete the Pivotal MySQL product, Ops Manager first runs the
**Broker Deregistrar** pre-delete errand, then deletes the product.

**Note**: You cannot prevent the **Broker Deregistrar** pre-delete errand from
running when you delete Pivotal MySQL.