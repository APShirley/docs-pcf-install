1. Click on **Security Config**.

1. Provide a certificate for your SSL Termination Point.
  <% if $this_IaaS == 'AWS-cloudform' %>
    This certificate must match the one that you uploaded to AWS earlier in the
    [Upload an SSL Certificate](./cloudform-template.html#upload-cert) section
    of the [Deploying the CloudFormation Template for PCF on
    AWS](./cloudform-template.html) topic.
    <p class='note'><strong>Note</strong>: Pivotal does not recommend using a
    self-signed certificate for production deployments.</p>
    
2. Configure **Disable HTTP traffic to HAProxy**. If you enable the **Disable HTTP traffic to HAProxy** checkbox, your deployment rejects all port 80 traffic to HAProxy. Additionally, this option enables the secure flag in the `VCAP_ID` cookie that the Router generates.

  <p class='note'><strong>Note</strong>: If you enable this checkbox and your deployment is not using HAProxy, configure your external load balancer to not accept port 80 traffic. If you do not do this, traffic to port 80 is still forwarded to applications but loses session stickiness.</p>

3. Configure **Disable HTTP traffic to UAA**. If you enable the **Disable HTTP traffic to UAA** checkbox, your deployment rejects all port 80 traffic to the UAA server. For more information about the UAA server, refer to the [User Account and Authentication (UAA) Server](../concepts/architecture/uaa.html) topic.
  <% else %>
  * In a production environment, use a signed **SSL Certificate**
    from a known certificate authority (CA). Copy and paste the values for
    **Certificate PEM** and **Private Key PEM** from the signed certificate
    into the appropriate text fields.
  * In a development or testing environment, you may use a self-signed
    certificate.
    <p class='note'><strong>Note</strong>: Pivotal does not recommend using a
    self-signed certificate for production deployments.</p>
    To use a self-signed certificate, follow the steps below:
        * Click the **Generate Self-Signed RSA Certificate** link to launch the
          RSA certificate wizard.
        * Enter your system and app domains in wildcard format.
          Optionally, also add any custom domains in wildcard format.
          The example below uses `*.example.com`.
          <p class="note"><strong>Note</strong>: Wildcard DNS records only work
            for a single domain name component or component fragment. For
            example, <code>*.domain.com</code> works for
            <code>apps.domain.com</code> and <code>system.domain.com</code>, but
            not for <code>my.apps.domain.com</code> or
            <code>my.system.domain.com</code>.
          </p>
        * Click **Generate**.
	      <%= image_tag("openstack/generate-cert.png") %>
        * Elastic Runtime populates the **SSL Certificate** fields with RSA
          certificate and private key information.
        * Select the **Trust Self-Signed Certificates** checkbox.
  <% end %>

	<%= image_tag("security_config.png") %>
 
1. Click **Save**.
 