---
title: Configuring Elastic Runtime for AWS
---

This topic describes how to configure the Pivotal Elastic Runtime components
that you need to run <a
href="https://network.pivotal.io/products/pivotal-cf">Pivotal Cloud Foundry</a>
(PCF) on Amazon Web Services (AWS).

Before following this procedure, complete all of the steps in the [Configuring
AWS for PCF](./pcf-aws-component-config.html) and [Configuring Ops Manager
Director for AWS](./pcf-aws-om-config.html) topics.

<p class="note"><strong>Note</strong>: PCF for AWS functionality works only in
	the us-east-1 region. You cannot deploy PCF to any other region. </p>

## <a id='pcfaws-er-om-add'></a>Step 1: Add Elastic Runtime to Ops Manager ##

1. Navigate to the Pivotal CF Ops Manager Installation Dashboard.

1. Click the Pivotal Network link on the left to add Elastic Runtime to Ops
Manager.

    For more information, refer to the [Adding and Deleting Products](./add-delete.html) topic.

1. Click the Elastic Runtime tile in the Installation Dashboard.

    <%= image_tag("pcfaws/er_14_tile.png") %>

## <a id='pcfaws-er-az-networks'></a>Step 2: Assign Networks and Availability Zones ##

1. Click **Assign Network**.

1. Select the network that you created in the [Networks
Pages](./pcf-aws-om-config.html#pcfaws-om-networks) section of the _Configuring
Ops Manager Director for AWS_ topic, and click **Save**.

    <p class="note"><strong>Note</strong>: When you save this form, a
	verification error displays because the PCF security group blocks ICMP. You
	can ignore this error.</p>

	<%= image_tag("pcfaws/er-network-error.png") %>

1. Click **Assign Availability Zones**.

1. Select the option button and checkbox to define the availability zone for
singleton jobs and job balancing.

    <%= image_tag("pcfaws/pcf_er_assign_az.png") %>

1. Click **Save**.

## <a id='pcfaws-er-db-config'></a>Step 3: Configure System Databases ##

If you want to use PCF's internal databases, select **Internal** and click **Save**.

If you want to use the external RDS instance for your Elastic Runtime databases, complete the following procedure .

First, create the databases that Elastic Runtime requires.
These instructions create those databases on the same RDS instance that you
created in [Manually Configuring AWS for
PCF](./pcf-aws-component-config.html#pcfaws-mysql-rds).

1. Add your key pair to your ssh profile so that you can access the machine:

	`ssh-add pcf.pem`

1. SSH into your Ops Manager VM using its IP address and the username `ubuntu`:

	`ssh ubuntu@OPS_MANAGER_IP`

	You can find the IP address for the Ops Manager VM on the AWS EC2 console.

1. Log in to your RDS instance through the MySQL client, using the hostname from
the RDS console and the username that you created the RDS instance with.
This command prompts you to enter the password for your RDS user:

	`mysql -h RDS-HOSTNAME -u RDS-USERNAME -p`

1. Create databases for each of the six CF components that require a database.
Run `CREATE database DB-NAME` for each of the following: `uaa`, `ccdb`,
`console`, `notifications`, `autoscale`, `app_usage_service`

1. You have now created the databases on the RDS instance.
Exit the mysql client and close your connection to the Ops Manager VM.

1. Navigate to the **System Database Config** page of the Elastic Runtime product tile.

1. Select **External Databases**.

1. Enter the RDS hostname, port (`3306`), username, and password.

    <%= image_tag("pcfaws/pcf_aws_er_db_config.png") %>

1. <%= partial 'mysql_proxy_config' %>

## <a id='file-store-config'></a>Step 4: Configure File Storage ##

<%= partial 'file_store_config' %>

## <a id='pcfaws-er-sslcert'></a>Step 5: Generate a Self-Signed Certificate ##

1. Select **IPs and Ports**.

1. Leave the **Router IPs** and **HAProxy IPs** fields blank.

1. Ensure that the **Loggregator Port** field is set to **4443**.
	<p class="note"><strong>Note</strong>: The default Loggregator port is 443, not 4443. Ensure that you update the **Loggregator Port** field from the default value. </p>

1. Click the **Generate Self-Signed RSA Certificate** link to launch the RSA
certificate wizard.

1. On the **Generate Self-Signed RSA Certificate** window, select a wildcard
domain that you own and click **Generate**.
The example in the image uses *.example.com.

    <%= image_tag("pcfaws/er_ssrsacert.png") %>

1. Elastic Runtime populates the **SSL Certificate** fields with RSA certificate
and private key information.

1. Click **Trust Self-Signed Certificates**.

    <%= image_tag("pcfaws/er_ipports_page.png") %>

1. Click **Save**.

## <a id='pcfaws-er-lb'></a>Step 6: Finalize the Load Balancer Setup ##

In this step, you complete your load balancer configuration that you began when
setting up AWS components for PCF.
For more information, see the [Prepare a Load Balancer and Wildcard DNS
Record](./pcf-aws-component-config.html#pcfaws-lb-cname) section in the
_Configure AWS for PCF_ topic.

1. On the EC2 Dashboard, click **Load Balancers**.

1. Select the load balancer that you created in the [Prepare a Load Balancer and
Wildcard DNS Record](./pcf-aws-component-config.html#pcfaws-lb-cname) section of
the _Manually Configuring AWS for PCF_ topic.
The **Load balancer** detail tabs display at the bottom of the page.

    <p class="note"><strong>Note</strong>: You must associate this ELB with your
	routers. Configure this on the <a href="#pcfaws-er-resource">Resource Config
	page</a> of the Elastic Runtime tile.</p>

1. Select **Listeners**.

    <%= image_tag("pcfaws/er_lb_add_listeners.png") %>

1. Click **Edit** to define a second listener with the following values:
    * **Load Balancer Protocol**: **HTTPS (Secure HTTP)**
    * **Load Balancer Port**: `443`
    * **Instance Protocol**: **HTTP**
    * **Instance Port**: `80`

1. Click **Edit** to define a third listener with the following values for use with websockets:
    * **Load Balancer Protocol**: **SSL (Secure TCP)**
    * **Load Balancer Port**: `4443`
    * **Instance Protocol**: **TCP**
    * **Instance Port**: `80`

    When you click **Save**, AWS prompts you to enter SSL certificates for these
	listeners.

    <%= image_tag("pcfaws/er_lb_add_sslcert.png") %>

1. Click **Change** in the **SSL Certificate** column of the second listener.

1. On the Select Certificate page, click **Upload a new SSL Certificate** and
complete the following information:
    * Enter a **Certificate Name**.
    * **Private Key** and **Public Key Certificate**: Paste the RSA certificate
		and private key information from the **SSL Certificate** fields of the
		IP and Ports page to the appropriate field.
    * Click **Save**.

    <%= image_tag("pcfaws/er_lb_cert_details.png") %>

1. Click **Change** in the **SSL Certificate** column of the third listener.

1. Select **Choose an existing SSL certificate** and select the certificate that
you previously uploaded for the second listener.

	<p class="note"><strong>Note</strong>: There might be a brief delay before
	the certificate that you uploaded for the second listener appears. If you do
	not see the certificate that you uploaded, try refreshing the page.</p>

    The image shows the completed listener information.

    <%= image_tag("pcfaws/er_lb_cert_done.png") %>

1. Click **Save** to complete the load balancer configuration.

## <a id='pcfaws-er-clocon'></a>Step 7: Configure the Cloud Controller ##

1. Select **Cloud Controller** and enter your system and application domains.
    * The **System Domain** defines your target when you push apps to Elastic
		Runtime.
    * The **Apps Domain** defines where Elastic Runtime should serve your apps.

    Pivotal recommends that you use the same domain name, but different
	subdomain names, for your system domain and your app domain.
    Doing so allows you to use a single wildcard certificate for the domain
	while preventing apps from creating routes that overlap with system routes.

	For example, name your system domain `system.MYDOMAIN.COM` and your apps
	domain `apps.MYDOMAIN.COM`.

    <%= image_tag("pcfaws/er_clocon.png") %>

1. Click **Save**.

## <a id='smtp'></a>Step 8: (Optional) Configure SMTP ##

Select **SMTP Config**, enter your reply-to and SMTP email information, set
**SMTP Authentication Mechanism** to `none`, and click **Save**.
Elastic Runtime uses these settings to send invitations and confirmations to
Apps Manager users.
These SMTP settings are required for the following:

* End-user self-registration
* [Notifications with UI](#pcfaws-er-notifications)

<p class="note"><strong>Note</strong>: If you do not configure the SMTP settings using this form, the administrator must create orgs and users using the cf CLI tool. See <a href="../adminguide/cli-user-management.html">Creating and Managing Users with the cf CLI</a> for more information.</p>

<%= image_tag("smtp.png") %>

## <a id='pcfaws-er-errands'></a>Step 9: Configure Errands ##

<%= partial 'errands' %>

## <a id='pcfaws-er-resource'></a>Step 10: Configure Resources ##

Because you are using RDS, S3, and ELBs, you can turn off VMs that you do not
need.

1. Click **Resource Config** and edit the following fields:
    * **NFS Server**: Enter `0` in **Instances**.
    * **Cloud Controller Database**: Enter `0` in **Instances**.
    * **UAA Database**: Enter `0` in **Instances**.
    * **Apps Manager Database**: Enter `0` in **Instances**.
    * **HAProxy**: Enter `0` in **Instances**.
    * **MySQL Proxy**: Enter `0` in **Instances**.
    * **MySQL Server**: Enter `0` in **Instances**.

1. Click **Save**.

<%= image_tag("pcfaws/er-aws-resource-config.png") %>

## <a id='config-elb'></a>Step 11: Configure Elastic Load Balancer ##

1. CLick **Resource Config**. In the **ELB Name** field of the **Router** row, enter the load balancer name that you created in the **Create Load Balancer** step described in [Manually Configuring AWS for PCF](./pcf-aws-component-config.html#pcfaws-lb-cname).

1. Click **Save**.

## <a id='pcfaws-er-complete'></a>Step 12: Complete the Elastic Runtime Installation ##

1. Click the **Installation Dashboard** link to return to the Installation
Dashboard.

1. Click **Apply Changes** to begin your installation of Elastic Runtime.
<br /><br />
    If an ICMP error message appears, click **Ignore errors and start the
	install**.

	<%= image_tag("pcfaws/er-install-error.png") %>

    The install process generally requires a minimum of 90 minutes to complete.
	The image shows the **Changes Applied** window that displays when the
	installation process successfully completes.

    <%= image_tag("aws/vpc-step16.png") %>

[Return to the Getting Started Guide](../getstarted/index.html)