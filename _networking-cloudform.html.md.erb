1. Select **Networking**.
<%= image_tag 'images/networking-config.png' %>
1. Leave the **Router IPs** and **HAProxy IPs** fields blank. You do not need to complete these fields when deploying PCF to AWS. Instead, add the name of your Elastic Load Balancer in the **ELB Name** column for the **Router** and the **Diego Brain** in the **Resource Config** tab of the Elastic Runtime tile. See the [Configure Router to Elastic Load Balancer](#config-elb) section of this topic for instructions. 

1. In **SSH Proxy IPs**, enter static IP addresses for the Diego Brain(s), which will accept requests to SSH into application containers on port 2222, and register a load balancer with these IP addresses. If deploying PCF to AWS with an ELB, do not enter IP addresses here. See [Step 22: Configure Router to Elastic Load Balancer](#config-elb) for more information.

1. Under **Select one of the following point-of-entry options**, choose one of the following options:
  * **Forward SSL to Elastic Runtime Router**: Select this option if your deployment uses an external load balancer that can forward encrypted traffic to the Elastic Runtime Router, or for a development environment that does not require load balancing. Complete the fields for the **Router SSL Termination Certificate and Private Key** and **Router SSL Ciphers**.
  * **Forward unencrypted traffic to Elastic Runtime Router**: Select this option if your deployment uses an external load balancer that cannot forward encrypted traffic to the Elastic Runtime Router, or for a development environment that does not require load balancing. 
  * **Forward SSL to HAProxy**: Select this option to use HAProxy as your first point of entry. Complete the fields for **SSL Certificate and Private Key**, and **HAProxy SSL Ciphers**. Select **Disable HTTP traffic to HAProxy** if you want the HAProxy to only allow HTTPS traffic.  You can also generate a self-signed certificate using your wildcard system domain.
  <p class="note">For details about providing SSL termination certificates and keys, see the [Providing a Certificate for your SSL Termination Point](../opsguide/security_config.html#config) topic.</p> 
1. If you are not using SSL encryption or if you are using self-signed certificates, select **Disable SSL certificate verification for this environment**. Selecting this checkbox also disables SSL verification for route services.

1. Select the **Disable insecure cookies on the Router** checkbox to set the secure flag for cookies generated by the router.

1. In the **Choose whether or not to enable route services** section, choose either **Enable route services** or **Disable route services**. 
Route services are a class of [marketplace services](../devguide/services/managing-services.html#marketplace) that perform filtering or content transformation on application requests and responses. 
See the [Route Services](../services/route-services.html) topic for details.
 
1. For Loggregator Port, you must enter `4443`. In AWS deployments, port 4443 forwards SSL traffic that supports WebSockets from the ELB. Do not use the default port of `443`.

1. Optionally, use the **Applications Subnet** field if you need to avoid address collision with a third-party service on the same subnet as your apps. Enter a CIDR subnet mask specifying the range of available IP addresses assigned to your app containers. The IP range must be different from the network used by the system VMs.

1. Optionally, you can change the value in the **Applications Network Maximum Transmission Unit (MTU)** field. Pivotal recommends setting the MTU value for your application network to `1454`. Some configurations, such as networks that use GRE tunnels, may require a smaller MTU value.   

1. Optionally, increase the number of seconds in the **Router Timeout to Backends** field to accommodate larger uploads over connections with high latency. 

1. Click **Save**.