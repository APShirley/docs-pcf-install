
<p class="note"><strong>Note</strong>: You only need to configure this section if you have selected <strong>Internal Databases - MySQL</strong> in the <strong>Databases</strong> section.</p>

1. Select **Internal MySQL**. 

1. In the **MySQL Proxy IPs** field, enter one or more comma-delimited IP addresses that are not in the reserved CIDR range of your network. If a MySQL node fails, these proxies re-route connections to a healthy node. See the [Proxy](http://docs.pivotal.io/p-mysql/index.html#proxy) section of the _MySQL for PCF_ topic for more information.</p>
	<%= image_tag("mysql-config.png") %>

1. For **MySQL Service Hostname**, enter an IP address or hostname for your load balancer. If a MySQL proxy fails, the load balancer re-routes connections to a healthy proxy. If you leave this field blank, components are configured with the IP address of the first proxy instance entered above.

1. In the **Replication canary time period** field, leave the default of 30 seconds or modify the value based on the needs of your deployment. Lower numbers cause the canary to run more frequently, which means that the canary reacts more quickly to replication failure but adds load to the database.

1. In the **Replication canary read delay** field, leave the default of 20 seconds or modify the value based on the needs of your deployment. This field configures how long the canary waits before verifying that data is replicating across each MySQL node, in seconds. Clusters under heavy load can experience a small replication lag as writesets are committed across the nodes.

1. **Required**. In the **Email address** field, enter the email address where the MySQL service sends alerts when the cluster experiences a replication issue or when a node is not allowed to auto-rejoin the cluster. 
	
	<%= image_tag("mysql-replication-canary.png") %>

1. Under **Automated Backups Configuration**, choose one of three options for MySQL backups:
  * **Disable automatic backups of MySQL**
  * **Enable automated backups from MySQL to an S3 bucket or other S3-compatible file store** saves your backups to an existing Amazon Web Services (AWS) or <a href="http://ceph.com/">Ceph</a> S3-compatible blobstore.
		<%= image_tag("mysql-backups-s3.png") %>
		This option requires the following fields:
		* For **S3 Bucket Name**, enter the name of your S3 bucket. Do not include an `s3://` prefix, a trailing `/`, or underscores. If the bucket does not already exist, it will be created automatically.
		* For **Bucket Path**, specify a folder within the bucket to hold your MySQL backups. Do not include a trailing `/`.
		* For **AWS Access Key ID** and **AWS Secret Access Key**, enter your AWS or Ceph credentials.
		* For **Cron Schedule**, enter a valid [cron](https://godoc.org/github.com/robfig/cron) expression to schedule your automated backups. Cron uses your computer's local time zone.
  * **Enable automated backups from MySQL to a remote host via SCP** saves your backups to a remote host using secure copy protocol (SCP).
		<%= image_tag("mysql-backups-scp.png") %>
		This option requires the following fields:
		* For **Hostname**, enter the name of your SCP host.
		* For **Port**, enter your SCP port. This should be the TCP port that your SCP host uses for SSH. The default port is `22`.
		* For **Username**, enter your SSH username for the SCP host.
		* For **Private key**, paste in your SSH private key.
		* For **Destination directory**, enter the directory on the SCP host where you want to save backup files.
		* For **Cron Schedule**, enter a valid [cron](https://godoc.org/github.com/robfig/cron) expression to schedule your automated backups. Cron uses your computer's local time zone.
		* Enable **Backup All Nodes** to make unique backups from each instance of the MySQL server rather than just the first MySQL server instance.
<p class="note"><strong>Note</strong>: If you choose to enable automated MySQL backups, set the number of instances for the **Backup Prepare Node** under the **Resource Config** section of the Elastic Runtime tile to `0`.</p>

1. Click **Save**.