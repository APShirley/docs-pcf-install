---
title: Preparing to Deploy PCF on GCP
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This guide describes the preparation steps required to install [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) on Google Cloud Platform (GCP).

## <a id="prereqs"></a> Prerequisites ##

You must have the following to install PCF on GCP:

* A GCP account and project with sufficient quota to deploy all the VMs needed for a PCF installation. <--need exact quota figures CPU + RAM. You can request a quota increase on the [GCP Quotas page](https://console.cloud.google.com/compute/quotas).
* The appropriate region and zones selected within your GCP project. For help selecting the correct region for your deployment, see the [Google documentation on regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones). 
* The [Google Cloud SDK](https://cloud.google.com/sdk/) installed on your machine and authenticated to your GCP account.
* Sufficiently high instance limits (or no instance limits) on your GCP account. Installing PCF requires more than the default 20 concurrent instances. <-- is there a limit in GCP?
* A registered wildcard domain for your PCF installation. You need this registered domain when configuring your SSL certificate and Cloud Controller. For more information see the *link to cert docs*.
* An SSL certificate for your PCF domain. This can be a self-signed certificate, but Pivotal recommends using a self-signed certificate for testing and development. You should obtain a certificate from your Certificate Authority for use in production. 

## <a id="deploy_prepare"></a> Preparing the GCP Environment for Deployment

In addition to the prerequisites listed above, you must create a new network and service account in GCP before deploying PCF. Follow these procedures to prepare your GCP environment. 

### <a id="create_network"></a> Create a GCP Network with Subnet

1. Navigate to your GCP project for PCF in the GCP Console. 

1. Select **Networking**, then **Create Network**. 
	1. Enter a name and descrption for your network. 
	1. Under **Subnetworks**, select **Custom** and specify a name, region, and address range.

	<%= image_tag("gcp/gcp-network-create.png") %>
1. Click **Create**.

### <a id="firewall_rules"></a> Create Firewall Rules for the Network

1. Create a firewall rule to allow all TCP traffic within the network. In the **Networking** pane, select **Firewall rules**, then **Create Firewall Rule**.
	* **Name**: Enter a name, such as `all-internal`
	* **Network**: Select the network you created in the section above. 
	* **Source Filter**: Choose **Subnetworks**, and then select the subnet you created in [Create a GCP Network with Subnet](#create_network).
	* **Allowed protocols and ports**: Enter `tcp:0-65535;udp:0-65535;icmp`. 
	* **Target tags**: <-- leave blank?
1. Create a firewall rule to allow  to allow `tcp:80;tcp:443;tcp:2222;tcp:4443` traffic from any source to VMs tagged with `pcf-lb`.
	* **Name**: Enter `pcf-lb`. 
	* **Network**: Select the network you created in the section above.
	* **Source filter**: Choose `allow from any source`. 
	* **Allowed protocols and ports**: Enter `tcp:80;tcp:443;tcp:2222;tcp:4443`.
	* **Target tags**: Enter `pcf-lb`. 

### <a id="iam_account"></a> Set up an IAM Service Account 

1. From the GCP Console, select **IAM & Admin**, then **Service accounts**. 
1. Click **Create Service Account**: 
	* **Service account name**: Enter a name. 
	* **Role**: Select the following permissions:
		* **Project** > **Editor** 
		* **Compute Engine** > **Compute Instance Admin**
		* **Compute Engine** > **Compute Network Admin**
		* **Compute Engine** > **Compute Security Admin**
		* **Compute Engine** > **Compute Storage Admin**
	* **Service account ID**: The field autogenerates a unique ID based on the username. 
	* **Furnish a new private key**: Select this checkbox and JSON as the **Key type**.

	<%= image_tag("gcp/iam_account.png") %>

1. Click **Create**. Your browser automatically downloads a JSON file with a private key for this account. Save this file in a secure location.

### <a id="keys"></a> Create a SSH Keypair for Your Project

1. Create a SSH keypair on your local machine with the username `vcap`. For example, use the following command:
	<pre class="terminal">
   	ssh-keygen -t rsa -f vcap-key -C vcap@local
   	</pre>

1. Open and edit the public key file `vcap-key.pub` to add the string `vcap:` before the key. For example, before the edit:

	```
	ssh-rsa PUBLIC-KEY-VALUE ...
	```

	After the edit:

	```
	vcap:ssh-rsa PUBLIC-KEY-VALUE ...
	```

1. If you have not done so already, install and set up [gcloud compute](https://cloud.google.com/compute/docs/gcloud-compute/). <-- maybe add more commands to set project and authorize into gcloud

1. Upload the key to your project by running the following command:
	<pre class="terminal">$ gcloud compute project-info add-metadata \
	 --metadata-from-file sshKeys=vcap-key.pub</pre>

1. Verify that the key data is uploaded to your project by executing the following command:

	<pre class="terminal">
	$ gcloud compute project-info describe
	</pre>
	The command outputs project metadata with the new key data appearing as a value in the `sshKeys` field.
	<pre class="terminal">
	commonInstanceMetadata:
  		fingerprint: #######
  		items:
  		\- key: sshKeys
    	value: |
      		vcap:ssh-rsa ...
    </pre>

## <a id="create_loadbalancers"></a> Create Load Balancers in GCP ##

You may need as many as three load balancers to operate PCF on GCP:

* Load balancer for Gorouter (required for all deployments)
* Load balancer for TCP Router (if you want to enable TCP routing feature)
* Diego brain (SSH proxy) load balancer (if you want to enable SSH access to your apps)

### <a id="gorouter_lb"></a> Create the Load Balancer for Gorouter ###

To create a load balancer for the Gorouter in GCP:

1. From the GCP Console, select **Networking**, **Load Balancing**, and then **Create load balancer**.

1. Under **TCP Load Balancing**, click **Start configuration**.

	<%= image_tag("gcp/lb-configure.png") %>

1. Under **Connection termination**, select **No (TCP)**. Click **Continue**. 

	<%= image_tag("gcp/lb_connection_termination.png") %>

1. On the **New TCP load balancer** screen, enter a unique name for the load balancer in the **Name** field.

1. Select **Backend configuration**, and enter the following field values:
   * **Region**: Select the region you used to create the network in [Create a GCP Network with Subnet](#create_network).
   * **Backup pool**: 
   * **Failover ration**:
   * **Health check**:
   * **Session affinity**

	<%= image_tag("gcp/lb_backend.png") %>

1. Select **Frontend configuration**, and add the first frontend IP and port entry as follows:
   * **Protocol**: TCP
   * **IP**: Select **Create IP address**. Enter a **Name** for the new static IP address, an optional description and then click **Reserve**.
   * **Port**: 80

1. Click **+Add frontend IP and port** to add a second frontend IP and port. Enter the values for the fields as follows:
   * **Protocol**: TCP
   * **IP**: Select the IP address you created in the previous step.
   * **Port**: 443

1. Click **+Add frontend IP and port** to add a third frontend IP and port. Enter the values for the fields as follows:
   * **Protocol**: TCP
   * **IP**: Select the IP address you created in the previous step.
   * **Port**: 2222


1. Click **+Add frontend IP and port** to add a third frontend IP and port. Enter the values for the fields as follows:
   * **Protocol**: TCP
   * **IP**: Select the IP address you created in the previous step.
   * **Port**: 4443

	<%= image_tag("gcp/lb_frontend.png") %>

1. Click **Review and finalize** to verify your configuration.

1. Click **Create**.

### <a id="next"></a> What to Do Next ###

Proceed to the next step in the deployment, [Launching an Ops Manager Director Instance on GCP](./gcp-om-deploy.html).

