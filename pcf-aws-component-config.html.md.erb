---
title: Configuring AWS for PCF
---

This topic describes how to configure the AWS components that you need to run <a href="https://network.pivotal.io/products/pivotal-cf">Pivotal Cloud Foundry</a> (PCF) on Amazon Web Services (AWS).

After you complete this procedure, complete all steps in the [Configuring Ops Manager Director for AWS](./pcf-aws-om-config.html) and [Configuring Elastic Runtime for AWS](./pcf-aws-er-config.html) topics.

<p class="note"><strong>Note</strong>: PCF for AWS functionality works only in the us-east-1 region. You cannot deploy PCF to any other region.</p>

<p class="note"><strong>Note</strong>: PCF for AWS functionality currently does not support the Amazon EC2 Auto Recovery feature. Do not enable this feature for any of your instances.</p>

## <a id='instance-limit'></a>Step 1: Ensure Your AWS Account Can Launch More Than 20 Instances ##

The default instance limit for an AWS account is 20 instances. Deploying Ops Manager and a few products uses more than 20 instances.  Increasing the AWS instance limit prevents errors and allows you to install more tiles. You can check the limits on your account by visiting the <a href="https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Limits:">limits section</a> of the EC2 site on the AWS console. AWS has a global instance limit, which is listed at the top of the limits page, as well as a limit per instance type. If you exceed these limits, Ops Manager displays an error. You can file an AWS support ticket to increase any relevant limits before retrying the Ops Manager installation.

File a support ticket with AWS, if you haven't already done so:

1. Login to your AWS account.
1. Select **Support Center** from the Support menu.
1. Click **Create case** and select **Service Limit Increase** in the "regarding" section.
1. Select **EC2 Instances** and ask for a limit of **50 t2.micro** instances in the **US East (Northern Virginia)** region.
1. **Add another request** for a limit of **20 c4.large** instances in the **US East (Northern Virginia)** region.
1. Enter a reason, such as "We'd like to run Pivotal Cloud Foundry and additional services, requiring more than 20 t2.micro and c4.large instances. Please increase the global instance limit to 50 as well."

    <%= image_tag("pcfaws/aws_support_ticket_instance_limit.png") %>


1. Fill out the rest of the form and submit.
1. It is safe to continue these instructions, but you might get errors installing tiles until the limit is raised.
1. These tickets are usually processed within a business day. In many cases, processing time might be as little as 15 to 30 minutes. You can check your <a href="https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Limits:">instances limits</a> at any time.

If you attempt to start too many VMs using OpsManager, such as by installing several products, Ops Manager might display an error about exceeding your instance limits. You can retry the installation after the limit has been raised.

## <a id='pcfaws-s3'></a>Step 2: Create S3 Buckets for Ops Manager and Elastic Runtime ##

<p class="note"><strong>Note</strong>: You must have two empty S3 blobstore buckets when you install or reinstall PCF for AWS.</p>

1. Navigate to the S3 Dashboard.
1. Use the wizard to create two S3 buckets, one for Ops Manager (OPS\_MANAGER\_S3\_BUCKET) and one for Elastic Runtime (ELASTIC\_RUNTIME\_S3\_BUCKET).
1. Record the bucket names. You need this information for the IAM policy in the next step and the configuration of your tiles.

## <a id='pcfaws-iam-user'></a>Step 3: Create an IAM User for PCF ##

You must create an Amazon Identity and Access Management user (IAM) with the minimal permissions necessary to run and install PCF.

1. Login to your AWS account.
1. Select **Identity & Access Management** to access the IAM Dashboard.
1. Select **Users****>****Create New Users**.
1. Enter a user name, such as `pcf-user`.

    <%= image_tag("pcfaws/aws_iam_username.png") %>


1. Ensure that the **Generate an access key for each user** checkbox is selected.
1. Click **Create**.
1. Click **Download Credentials** to download the user security credentials.

    <p class="note"><strong>Note</strong>: The <code>credentials.csv</code> contains the IDs for your user security access key and secret access key. Be sure to keep the <code>credentials.csv</code> file for your currently active key pairs in a secure directory.</p>

1. Click **Close**.
1. On the User dashboard, click the user name to access the user details page.

    <%= image_tag("pcfaws/aws_iam_select_pcfuser.png") %>

1. In the **Inline Policies** region, click the down arrow to display the inline policies. Click the **click here** link to create a new policy.

    <%= image_tag("pcfaws/aws_iam_add_policy_cropd.png") %>


1. On the Set Permissions page, click **Custom Policy** and click **Select**.

    <%= image_tag("pcfaws/aws_iam_custom_policy.png") %>

1. On the Review Policy page, enter `pcf-iam-policy` in **Policy Name**.
1. Copy and paste the following text in the **Policy Document** field.

    <p class="note"><strong>Note</strong>: Ensure that you edit the <code>S3_BUCKET_NAME</code> placeholder text with the bucket names that you define in the <a href="#pcfaws-s3">Create S3 Buckets</a> section.</p>

    <pre class="code">

    {
      "Version": "2012-10-17",
      "Statement": [
        {
            "Effect": "Deny",
            "Action": [
                "iam:*"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid": "OpsMgrInfrastructureIaasConfiguration",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeKeypairs",
                "ec2:DescribeVpcs",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeAvalibilityZones",
                "ec2:DescribeAccountAttributes"
            ],
            "Resource": "*"
        },
        {
            "Sid": "OpsMgrInfrastructureDirectorConfiguration",
            "Effect": "Allow",
            "Action": [
                "s3:*"
            ],
            "Resource": [
                "arn:aws:s3::: OPS_MANAGER_S3_BUCKET",
			    "arn:aws:s3::: OPS_MANAGER_S3_BUCKET/*",
			    "arn:aws:s3::: ELASTIC_RUNTIME_S3_BUCKET",
			    "arn:aws:s3::: ELASTIC_RUNTIME_S3_BUCKET/*"
            ]
        },
        {
            "Sid": "OpsMgrInfrastructureAvilibilityZones",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeAvailabilityZones"
            ],
            "Resource": "*"
        },
        {
            "Sid": "OpsMgrInfrastructureNetworks",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeSubnets"
            ],
            "Resource": "*"
        },
        {
            "Sid": "DeployMicroBosh",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeImages",
                "ec2:RunInstances",
                "ec2:DescribeInstances",
                "ec2:TerminateInstances",
                "ec2:RebootInstances",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "ec2:DescribeAddresses",
                "ec2:DisassociateAddress",
                "ec2:AssociateAddress",
                "ec2:CreateTags",
                "ec2:DescribeVolumes",
                "ec2:CreateVolume",
                "ec2:AttachVolume",
                "ec2:DeleteVolume",
                "ec2:DetachVolume"
            ],
            "Resource": "*"
        }
    ]
}


    </pre>

1. Ensure that the **Use autoformatting for policy editing** checkbox is selected.

1. Click **Apply Policy**.


    <%= image_tag("pcfaws/aws_iam_json_policy.png") %>

    The Inline Policies region now displays a list of available policies and actions, as the image shows.


    <%= image_tag("pcfaws/aws_iam_policies_list.png") %>

## <a id='pcfaws-key-pairs'></a>Step 4: Create Two Key Pairs ##

We recommend creating two key pairs for the following:

* One key pair to access your AWS instances and the AWS EC2 MicroBOSH instance that manages your deployment.
* One key pair to access your Ops Manager VM.

1. Ensure that you have select **US East (Northern Virginia)** as your region.
1. Select **EC2** to access the EC2 Dashboard.
1. Select **Key Pairs**, click **Create Key Pair**, and name it `pcf`.
1. Create a second key pair and give it a name. For example, `ops_mgr`.

The private keys `pcf.pem` and `ops_mgr.pem` download automatically. Ensure that you add both private keys to your local SSH keys directory. Refer to the [AWS Documentation](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html).

## <a id='pcfaws-vpc'></a>Step 5: Create a VPC ##

1. Navigate to the VPC Dashboard.
1. Click **Start VPC Wizard**.

    <%= image_tag("pcfaws/pcf_aws_vpc_wizard.png") %>

1. Select **VPC with Public and Private Subnets** and click **Select**.

    <%= image_tag("pcfaws/pcf_aws_vpc_config.png") %>

1. Specify the following details for your VPC:
    * **IP CIDR block**: Enter `10.0.0.0/16`.
    * Enter a VPC name.
    * **Public subnet**: Enter `10.0.0.0/24`.
    * Set both **Availability Zone** fields to an available **us-east-1** region value. You must set both subnets to the same AZ, such as **us-east-1a**.
    * **Public subnet name**: Enter `public-az1`.
    * **Private subnet**: Enter `10.0.16.0/20`.
    * **Private subnet name**: Enter `pcf-private-az1`.
    * **Instance type**: Select **m1.small**.
    * Select the `pcf` SSH key you created for **Key Pair name**.
    * **Enable DNS hostnames**: Click `Yes`.
    * **Hardware tenancy**: Select `Default`.
    * Click **Create VPC**.

    <%= image_tag("pcfaws/pcf_aws_vpc_details.png") %>

## <a id='pcfaws-om-secgrp'></a>Step 6: Configure a Security Group for Ops Manager ##

1. Return to the EC2 Dashboard.
1. Select **Security Groups****>****Create Security Group**.
1. Enter a security group name and description: `OpsManager`.
1. Select the VPC to which to deploy Ops Manager.
1. Click the **Inbound** tab and add rules for HTTP, HTTPS and SSH for your IP only, as the table and image show.

    <p class="note"><strong>Note</strong>: You may relax the IP restrictions after setting the password for OpsManager. Pivotal recommends limiting access to Ops Manager to IP ranges within your organization.</p>

    <table border="1" class="nice" >
<tr>
  <th><strong>Type </strong></th>
  <th><strong>Protocol</strong></th>
  <th><strong>Port Range</strong></th>
  <th><strong>Source</strong></th>
</tr>
<tr>
  <td>HTTP</td>
  <td>TCP</td>
  <td>80</td>
  <td>My IP</td>
</tr>
<tr>
  <td>HTTPS</td>
  <td>TCP</td>
  <td>443</td>
  <td>My IP</td>
</tr>
<tr>
  <td>SSH</td>
  <td>TCP</td>
  <td>22</td>
  <td>My IP</td>
</tr>
</table>


1. Click **Create**.

    <%= image_tag("pcfaws/pcf_aws_secgrp_om.png") %>

## <a id='pcfaws-om-ersecgrp'></a>Step 7: Configure a Security Group for PCF VMs ##

1. On the EC2 Dashboard, select **Security Groups****>****Create Security Group**.
1. Enter a security group name and description: `pcfVMs`.
1. Select the VPC to which to deploy the PCF VMs.
1. Click the **Inbound** tab and add rules for all traffic from your public and private subnets to your private subnet, as the table and image show.
    This rule configuration does the following:
    * Enables BOSH to deploy ERS and other services.
    * Enables application VMs to communicate through the router.
    * Allows the load balancer to send traffic to Elastic Runtime.

    <table border="1" class="nice" >
<tr>
  <th><strong>Type </strong></th>
  <th><strong>Protocol</strong></th>
  <th><strong>Port Range</strong></th>
  <th colspan='2'><strong>Source</strong></th>
</tr>
<tr>
  <td>All traffic</td>
  <td>All</td>
  <td>0 - 65535</td>
  <td>Custom IP</td>
  <td>10.0.0.0/16</td>
</tr>
</table>

1. Click **Create**.

    <%= image_tag("pcfaws/pcf_aws_secgrp_er.png") %>


## <a id='pcfaws-om-elbsecgrp'></a>Step 8: Configure a Security Group for the Elastic Load Balancer ##

1. On the EC2 Dashboard, select **Security Groups****>****Create Security Group**.
1. Enter a security group name and description: `PCF_ELB_SecurityGroup`.
1. Select the VPC to which to deploy the ELB.
1. Click the **Inbound** tab and add rules to allow traffic to :80, :443, and :4443 from 0.0.0.0/0, as the table and image show.

    <p class="note"><strong>Note</strong>:You can change the 0.0.0.0/0 to be more restrictive if you want finer control over what can reach the Elastic Runtime. This security group governs external access to the Elastic Runtime from applications such as the cf CLI and applicaton URLs.</p>

    <table border="1" class="nice" >
<tr>
  <th><strong>Type </strong></th>
  <th><strong>Protocol</strong></th>
  <th><strong>Port Range</strong></th>
  <th colspan='2'><strong>Source</strong></th>
</tr>
<tr>
  <td>Custom TCP rule</td>
  <td>TCP</td>
  <td>4443</td>
  <td>Anywhere</td>
  <td>0.0.0.0/0</td>
</tr>
<tr>
  <td>HTTP</td>
  <td>TCP</td>
  <td>80</td>
  <td>Anywhere</td>
  <td>0.0.0.0/0</td>
</tr>
<tr>
  <td>HTTPS</td>
  <td>TCP</td>
  <td>443</td>
  <td>Anywhere</td>
  <td>0.0.0.0/0</td>
</tr>
</table>

1. Click **Create**.

    <%= image_tag("pcfaws/pcf_aws_secgrp_elb.png") %>

## <a id='pcfaws-om-natsecgrp'></a>Step 9: Configure a Security Group for the Outbound NAT ##

1. On the EC2 Dashboard, select **Security Groups****>****Create Security Group**.
1. Enter a security group name and description: `OutboundNAT`.
1. Select the VPC to which to deploy the Outbound NAT.
1. Click the **Inbound** tab and add a rule to allow all traffic from your VPCs, as the table and image show.

    <table border="1" class="nice" >
<tr>
  <th><strong>Type </strong></th>
  <th><strong>Protocol</strong></th>
  <th><strong>Port Range</strong></th>
  <th colspan='2'><strong>Source</strong></th>
</tr>
<tr>
  <td>All traffic</td>
  <td>All</td>
  <td>All</td>
  <td>Custom IP</td>
  <td>10.0.0.0/16</td>
</tr>
</table>

1. Click **Create**.

    <%= image_tag("pcfaws/pcf_aws_secgrp_nat.png") %>


## <a id='pcfaws-om-mysqlsecgrp'></a>Step 10: Configure a Security Group for MySQL ##

<p class="note"><strong>Note</strong>: This step is optional. If you plan to use an internal database you can skip this step. If you are using RDS you must configure a security group that enables the Ops Manager VM and Ops Manager Director VM to access the database.</p>

1. On the EC2 Dashboard, select **Security Groups****>****Create Security Group**.
1. Enter a security group name and description: `MySQL`.
1. Select the VPC to which to deploy MySQL.
1. Click the **Inbound** tab. Add a rule of type MYSQL and specify the subnet of your VPC in **Source**, as the table and image show.

    <table border="1" class="nice" >
<tr>
  <th><strong>Type </strong></th>
  <th><strong>Protocol</strong></th>
  <th><strong>Port Range</strong></th>
  <th colspan='2'><strong>Source</strong></th>
</tr>
<tr>
  <td>MySQL</td>
  <td>TCP</td>
  <td>3306</td>
  <td>Custom IP</td>
  <td>10.0.0.0/16</td>
</tr>
</table>

1. Click **Create**.

    <%= image_tag("pcfaws/pcf_aws_secgrp_mysql.png") %>

## <a id='pcfaws-om-ami'></a>Step 11: Configure the Pivotal Ops Manager AMI ##

1. Return to the EC2 Dashboard.
1. Click **AMIs**, locate the `pivotal-ops-manager` public image `ami-1e4e7976`, and click **Launch**.

    <p class="note"><strong>Note</strong>: If you cannot locate the AMI, ensure that you have set your AWS Management Console to the <strong>US East (N. Virginia)</strong> region. If you still cannot locate the AMI, log in to the <a href="https://network.pivotal.io">Pivotal Network</a> and file a support ticket.</p>

    <%= image_tag("pcfaws/pcf_aws_ami.png") %>

1. Choose **m3.large** for your instance type and click **Next: Configure Instance Details**.

    <%= image_tag("pcfaws/aws_ami_m3large.png") %>

1. Configure the following for your instance:
    * **Network**: Select the VPC you created.
    * **Subnet**: Select your public subnet instance.
    * **Auto-assign for Public IP**: Select **Enable**.
    * For all other fields, accept the default values.

    <%= image_tag("pcfaws/pcf_aws_configure_instance.png") %>

1. Click **Next: Add Storage** and adjust the **Size (GiB)** value.
The default persistent disk value is 50 GB. We recommend increasing this value to a minimum of 100 GB.

    <%= image_tag("pcfaws/pcf_aws_add_storage.png") %>

1. Click **Next: Tag Instance** and **Next: Configure Security Group**.
1. Select the Ops Manager security group that you created in [Configure a Security Group for Ops Manager](#pcfaws-om-secgrp).
1. Click **Review and Launch** and confirm the instance launch details.
1. Click **Launch**.
1. Select the `ops_mgr` key pair, confirm that you have access to the private key file, and click **Launch Instances**.

    You use this key pair only to access the Ops Manager VM.

    <%= image_tag("pcfaws/select_pcfpem_keypair.png") %>

1. Click **View Instances** to access the **Instances** page on the EC2 Dashboard.


## <a id='pcfaws-lb-cname'></a>Step 12: Prepare a Load Balancer and a Wildcard DNS Record ##

To ensure that AWS caches the correct IP address during DNS resolution, you must create the following:

* A load balancer with your domain, a HTTP listener, and other basic information.
* A CNAME wildcard DNS record.

You finish setting up the load balancer with a HTTPS listener and SSL certification information when you configure Elastic Runtime. For more information, see the [Generate a Self-Signed Certificate](./pcf-aws-er-config.html#pcfaws-er-sslcert) and [Finalize the Load Balancer Setup](./pcf-aws-er-config.html#pcfaws-er-lb) sections of the _Configure Elastic Runtime for AWS_ topic.

1. On the EC2 Dashboard, click **Load Balancers**.
1. Click **Create Load Balancer** and configure a load balancer with the following information:
    * Enter a load balancer name.
    * **Create LB Inside**: Select the Pivotal CF VPC you created in [Create a VPC](#pcfaws-vpc).
    * Ensure that the **Internal Load Balancer** checkbox is not selected. In a later step you specify a security group to limit inbound traffic to the load balancer.
    * Click **Add** to define a HTTP listener. Set both protocol fields to **HTTP** and set both port fields to `80`.
    * Click **Continue**.

    <%= image_tag("pcfaws/create_lb.png") %>

1. Select **TCP** in **Ping Protocol** on the **Configure Health Check** page. Ensure that the **Ping Port** value is `80` and set the **Health Check Interval** to 10 seconds. Click **Continue**.

    <%= image_tag("pcfaws/lb_health_check.png") %>

1. Click **Select Subnet**, select the public subnet you configured in [Create a VPC](#pcfaws-vpc), and click **Continue**.

1. Click **Assign Security Groups**, select the security group you configured in [Configure a Security Group for the Elastic Load Balancer](#pcfaws-om-elbsecgrp), and click **Continue**.

    <%= image_tag("pcfaws/lb_assign_sec_groups.png") %>

1. Accept the defaults on the **Add EC2 Instances** page and click **Continue**.

    <p class="note"><strong>Note</strong>: Do not add instances to the Load Balancer in this step. You add them on the <a href="./pcf-aws-om-config.html#pcfaws-om-rscestem">Resource Config page</a> of the Ops Manager Director tile.</p>

1. Accept the defaults on the **Add Tags** page and click **Continue**.
1. Review and confirm the load balancer details, and click **Create**.
1. [Create a CNAME wildcard record](../devguide/deploy-apps/domains-routes.html#parent-dns) with your DNS provider to point to the load balancer domain.
1. Optionally, create an additional CNAME record with your DNS provider to map a host name such as 'pcf' or 'opsmng' to the public DNS of the Ops Manager AMI.

## <a id='pcfaws-nat'></a>Step 13: Configure the NAT Instance ###

1. On the EC2 Dashboard, click **Instances**. Select the NAT instance, which has an instance type of **m1.small**.
1. From the **Actions** menu, select **Networking****>****Change Security Groups**.
1. Change the NAT security group to the outbound NAT security group you created in [Configure a Security Group for the Outbound NAT](#pcfaws-om-natsecgrp), and click **Assign Security Groups**.

    <%= image_tag("pcfaws/pcf_aws_select_security_group.png") %>

## <a id='pcfaws-dns-address'></a>Step 14: Record the Ops Manager Instance Public DNS Address ##

Locate and record the public DNS address of your Ops Manager instance. You need this DNS address anytime you want to access Ops Manager using a browser.

1. On the **Instances** page of the EC2 Dashboard, sort the **Instance Type** column to find the **m3.large** instance that you created in [Configure the Pivotal Ops Manager AMI](#pcfaws-om-ami).
1. Record this value for the next part of this procedure, which is launching Ops Manager in a browser and continuing the configuration process.

    <%= image_tag("pcfaws/pcf_aws_public_dns.png") %>


## <a id='pcfaws-rds-subnets'></a>Step 15: Set up Subnets for RDS ##

You must create two new subnets to enable the RDS MySQL database. You create this database in the next step.

1. Navigate to the VPC Dashboard and click **Subnets**.
1. Click **Create Subnet** and enter the following information for the first subnet:
    * **Name tag**: `rds-1`
    * **VPC**: Select your Pivotal CF VPC.
    * **Availability Zone**: For performance reasons, set this AZ value to the same AZ value that you defined for the private subnet.
    * **CIDR block**: Define a unique network range, such as `10.0.2.0/24`.

    <%= image_tag("pcfaws/rds_pcf_subnet_rds1.png") %>

1. Click **Create Subnet** and enter the following information for the second subnet:
    * **Name tag**: `rds-2`
    * **VPC**: Select your Pivotal CF VPC.
    * **Availability Zone**: Select a different AZ than what you specified in rds-1.
    * **CIDR block**: Define a unique network range, such as `10.0.3.0/24`.

    <%= image_tag("pcfaws/rds_pcf_subnet_rds2.png") %>

1. Navigate to the the RDS Dashboard.
1. Create a RDS Subnet Group for the two RDS subnets.
    * Navigate to the RDS Dashboard, click **Subnet Groups****>****Create DB Subnet Group**.
    * Enter a name and description.
    * **VPC ID**: Select your Pivotal CF VPC.
    * **Availability Zone** and **Subnet ID**: Choose the AZ and subnet for rds-1 and click **Add**. Repeat this process to add rds-2 to the group.
    * Click **Create**.

    The image shows a completed subnet group.

    <%= image_tag("pcfaws/rds_pcf_subnet_group.png") %>

    <p class="note"><strong>Note</strong>: On the Subnet Group dashboard page, you might need to refresh the page to view the new group.</p>

## <a id='pcfaws-mysql-rds'></a>Step 16: Create a MySQL Database using AWS RDS ##

Create a MySQL database. You can use the AWS RDS functionality available on the RDS Dashboard to create this database.

<p class="note"><strong>Note</strong>: You must have an empty MySQL database when you install or reinstall PCF for AWS.</p>

This step provides the information for the Host, Port, Username, Password, and Database fields on the **Director Config** page of the Ops Manager Director tile.

1. Navigate to the RDS Dashboard. Click **Instances****>****Launch DB Instance** to launch the wizard.

1. Select **MySQL**.

1. Select **Yes** to create a database for production environments. Click **Next Step**.

1. Specify the following database details:
    * **DB Instance Class**: Select **db.m3.large - 2 vCPU, 7.5 GiB RAM**.
    * **Multi-AZ Deployment**: Select **Yes**.
    * **Allocated Storage**: Enter **100 GB**.
    * **DB Instance Identifier**: Enter `pcf-bosh`.
    * Define a secure **Master Username** and **Master Password**.

    <p class="note"><strong>Note</strong>: Record the username and password that you entered. You need this later when configuring the <strong>Director Config</strong> page in the Ops Manager Director tile.</p>

1. Configure advanced settings:
    * **VPC**: Select your Pivotal CF VPC.
    * **Subnet Group**: Select the security group you created in [Set up Subnets for RDS](#pcfaws-rds-subnets).
    * **Publicly Accessible**: Select **No**.
    * **VPC Security Groups**: Select the security group you created in [Configure a Security Group for MySQL](#pcfaws-om-mysqlsecgrp).
    * **Database Name**: Enter `bosh`.
    * Accept the default values for the remaining fields.

1. Click **Launch DB Instance**. The instance generation process might take several minutes.

[Return to the Getting Started Guide](../getstarted/index.html)

