---
title: Installing Elastic Runtime on AWS CloudFormation
---

This topic describes how to install and configure Elastic Runtime after
deploying the CloudFormation template for [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) on Amazon Web
Services (AWS).
Use this topic when [Installing Pivotal Cloud Foundry using AWS CloudFormation](./cloudform.html).

Before beginning this procedure, ensure that you have successfully completed all
steps in the [Deploying the CloudFormation Template for PCF on AWS](./cloudform-template.html) and [Configuring Ops Manager Director after Deploying PCF on AWS using CloudFormation](./cloudform-om-config.html) topics.

## <a id='open-outputs'></a>Step 1: Open the Outputs Tab in AWS ##

In the Stacks Dashboard of the [AWS Console](https://console.aws.amazon.com/),
select the **pcf-stack** checkbox, then select the **Outputs** tab.

<%= image_tag("cloudform/outputs.png") %>

You use the information in the **Value** column of the **Outputs** tab to
[configure the Ops Manager Director](./cloudform-om-config.html#aws-config) and [configure Elastic Runtime](#add-er).

## <a id='add-er'></a>Step 2: Add Elastic Runtime to Ops Manager ##

1. Navigate to the Pivotal CF Ops Manager Installation Dashboard.

1. Click the Pivotal Network link on the left to add Elastic Runtime to Ops
Manager. For more information, refer to the [Adding and Deleting Products](/pivotalcf/customizing/add-delete.html) topic.

1. Click the **Elastic Runtime** tile in the Installation Dashboard.

    <%= image_tag("cloudform/er-tile.png") %>

## <a id='assign-az'></a>Step 3: Assign Availability Zones ##

1. Select **Assign Availability Zones**.

1. Select the option button and checkbox to define the Availability Zone for singleton jobs and job balancing.

1. Click **Save**.

    <%= image_tag("cloudform/er-az.png") %>

## <a id='sys-db'></a>Step 4: System Database Config Page ##

1. Select **System Database Config**.

1. Select the **External Databases** option.

1. Complete the **System Database Config** page with information from the **Outputs** tab in the AWS Console:
    * **Hostname DNS Name**: Use the value of **PcfRdsAddress**.
    * **TCP Port**: Use the value of **PcfRdsPort**.
    * **Username**: Use the value of **PcfRdsUsername**.
    * **Password**: Use the value of **PcfRdsPassword**.

1. Click **Save**.

    <%= image_tag("cloudform/sys-db.png") %>

## <a id='filestore'></a>Step 5: (Optional) File Storage Config Page ##

Complete the following procedures to create and configure an external filestore
for Elastic Runtime.

* [Create an S3 bucket](#create-bucket).
* [Update the IAM policy](#update) to grant the **PcfIamUserAccessKey** user
access to this bucket.
* [Configure Elastic Runtime](#configure) to use this bucket.

### <a id='create-bucket'></a>Create S3 Bucket ###

1. In the AWS Console, navigate to the [S3 Dashboard](https://console.aws.amazon.com/s3/home?region=us-east-1#).

1. Click **Create Bucket**.

    <%= image_tag("cloudform/create-bucket.png") %>

1. For **Bucket Name**, enter `pcf-runtime`.

1. For **Region**, select the region where you deployed Ops Manager.

1. Click **Create**.

    <%= image_tag("cloudform/pcf-runtime-bucket.png") %>

### <a id='update'></a>Update IAM Policy ###

1. Navigate to the AWS [Identity and Access Management Dashboard](https://console.aws.amazon.com/iam/home?region=us-east-1#home).

1. Click **Users**.

    <%= image_tag("cloudform/identity-dashboard.png") %>

1. Click the name of the user created by the CloudFormation script. This name
begins with `pcf-stack`, the name of the stack that you created when [Deploying the CloudFormation Template](./cloudform-template.html).

    <%= image_tag("cloudform/select-user.png") %>

1. In the **Security Credentials** section of the user **Summary** page, confirm
that the **Access Key** matches the value of **PcfIamUserAccessKey** from the
**Outputs** tab of the Stacks Dashboard.

    <%= image_tag("cloudform/confirm-access-key.png") %>

1. In the **Permissions** section of the user **Summary** page, under **Inline Policies**, locate the **PcfPolicy** and click **Edit Policy**.

    <%= image_tag("cloudform/edit-policy.png") %>

1. In the **Review Policy** page, within the **Statement** block, locate the
second **Resource** key.

    <%= image_tag("cloudform/resource-orig.png") %>

1. Add the following two lines to the beginning of the array for this
**Resource** key:

    <pre class='code'>
      "arn:aws:s3:::pcf-runtime",
      "arn:aws:s3:::pcf-runtime/*",
    </pre>

1. Click **Apply Policy**

    <%= image_tag("cloudform/resource-new.png") %>

### <a id='configure'></a>Configure Elastic Runtime ###

1. In Ops Manager, select **File Storage Config**.

1. Select the **External S3-Compatible Filestore** option and complete the
following fields:
    * For **URL Endpoint**:
        1. In a browser, open the [Amazon Simple Storage Service (S3) table](http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region).
        1. Prepend `https://` to the **Endpoint** for your region and copy it
          into the Ops Manager **URL Endpoint** field.
		      <br /><br />
		      For example, in the **us-west-1** region, use
		      `https://s3-us-west-1.amazonaws.com/`.
    * **Bucket Name**: Enter the name of the S3 bucket that you created,
        `pcf-runtime`.
    * **Access Key ID**: Use the value of **PcfIamUserAccessKey**.
    * **AWS Secret Key**: Use the value of **PcfIamUserSecretAccessKey**.

1. Click Save.

    <%= image_tag("cloudform/filestore-config.png") %>

## <a id='cloud-controller'></a>Step 6: Cloud Controller Page ##

1. Select **Cloud Controller** and enter your system and application domains.
    * The **System Domain** defines your target when you push apps to Elastic
		Runtime.
	* The **Apps Domain** defines where Elastic Runtime should serve your apps.

    Pivotal recommends that you use the same domain name, but different
	subdomain names, for your system domain and your app domain. Doing so allows
	you to use a single wildcard certificate for the domain while preventing
	apps from creating routes that overlap with system routes.

	For example, name your system domain `system.MYDOMAIN.COM` and your apps
	domain `apps.MYDOMAIN.COM`.

1. Click **Save**.

    <%= image_tag("cloudform/cloud-controller.png") %>

## <a id='smtp'></a>Step 7: (Optional) SMTP Config Page ##

Elastic Runtime uses SMTP to send invitations and confirmations to Apps Manager
users.
You must complete the **Configuration for SMTP** page if you want to enable
end-user self-registration.

1. Select **SMTP Config**.

1. Enter your reply-to and SMTP email information.

1. For **SMTP Authentication Mechanism**, select `none`.

1. Click **Save**.

    <p class='note'><strong>Note</strong>: If you do not configure the SMTP
	settings using this form, the administrator must create orgs and users using
	the cf CLI tool. See <a href='http://docs.pivotal.io/pivotalcf/adminguide/cli-user-management.html'>Creating and Managing Users with the cf CLI</a> for more information.</p>

    <%= image_tag("cloudform/smtp.png") %>

## <a id='errands'></a>Step 8: Configure Errands Page ##

<%= partial 'errands' %>

## <a id='complete'></a>Step 9: Complete the Resource Config Page ##

Elastic Runtime requires an Elastic Load Balancer (ELB) in AWS.
Complete the steps below to [create an ELB](#create-elb) and [configure Elastic Runtime](#configure-er) to use the ELB.

### <a id='create-elb'></a>Create an Elastic Load Balancer ###

1. In the AWS Console, navigate to the [S3 Dashboard](https://console.aws.amazon.com/s3/home?region=us-east-1#).

1. Click **Load Balancers**. Click **Create Load Balancer**.

    <%= image_tag("cloudform/elb-create.png") %>

1. On the **Define Load Balancer** page, for **Load Balancer name**, enter
`pcf-elb`.

1. From the **Create LB Inside** drop-down menu, select **pcf-vpc**.

1. Under **Select Subnets**, select **pcf-public-subnet**.

1. Click **Next: Assign Security Groups**.

    <%= image_tag("cloudform/elb-define.png") %>

1. On the **Assign Security Groups** page, select the **Select an existing security group** option.

1. Select the **Security Group ID** with **Name** beginning with
**pcf-stack-PcfVmsSecurityGroupId**.

1. Click **Next: Configure Security Settings**.

    <%= image_tag("cloudform/elb-security-group.png") %>

1. On the **Configure Security Settings** page, click **Next: Configure Health Check**.

1. On the **Configure Health Check** page, click **Next: Add EC2 Instance**.

1. On the **Add EC2 Instance** page, select the **Instance** named **NAT Instance**.

1. Click **Next: Add Tags**.

    <%= image_tag("cloudform/elb-add-instances.png") %>

1. On the **Add Tags** page, click **Review and Create**.

1. On the **Review** page, click **Create**.

    <%= image_tag("cloudform/elb-review.png") %>

1. AWS creates your load balancer.
On the **Load Balancer Creation Status** page, click **Close**.

    <%= image_tag("cloudform/elb-done.png") %>

### <a id='configure-er'></a>Configure Elastic Runtime to Use the ELB ###

1. In Ops Manager, select **Resource Config**.

1. In the **ELB Name** field of the **Router** row, enter the load balancer name that you created, `pcf-elb`.

1. Click **Save**.

    <%= image_tag("cloudform/resource-config.png") %>

## <a id='disable-resources'></a>Step 10: (Optional) Disable Unused Resources ##

<%= partial 'disable_resources' %>

## <a id='complete'></a>Step 11: Complete the Elastic Runtime Installation ##

1. Click the **Installation Dashboard** link to return to the Installation
Dashboard.

1. Click **Apply Changes**. If the following ICMP error message appears, click
**Ignore errors and start the install**.

    <%= image_tag("cloudform/install-error.png") %>

    The install process generally requires a minimum of 90 minutes to complete.
	The image shows the Changes Applied window that displays when the
	installation process successfully completes.

    <%= image_tag("cloudform/ops-manager-complete.png") %>

---

Return to [Installing Pivotal Cloud Foundry using AWS CloudFormation](./cloudform.html).