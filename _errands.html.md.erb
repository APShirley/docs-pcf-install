Errands are scripts that Ops Manager runs to automate tasks. By default, Ops Manager runs the post-install errands listed below when you deploy Elastic Runtime. However, you can prevent a specific post-install errand from running by deselecting its checkbox on the **Errands** page.

<p class='note'><strong>Note</strong>: Several errands deploy apps that provide services for your deployment, such as Autoscaling and Notifications. Once one of these apps is running, deselecting the checkbox for the corresponding errand on a subsequent deployment does not stop the app.</p>

<%= image_tag('errands.png') %>

* **Run Smoke Tests** verifies that your deployment can do the following:

    * Push, scale, and delete apps
    * Create and delete orgs and spaces

* **Push Apps Manager** deploys the Apps Manager, a dashboard for managing apps, services, orgs, users, and spaces. Until you deploy Apps Manager, you must perform these functions through the cf CLI. After Apps Manager has been deployed, Pivotal recommends deselecting the checkbox for this errand on subsequent Elastic Runtime deployments. For more information about the Apps Manager, see [Getting Started with the Apps Manager](../console/dev-console.html).

* **Notifications** deploys an API for sending email notifications to your PCF platform users.

    <p id='notifications' class='note'><strong>Note</strong>: 
        The Notifications app requires that you <a href='#smtp'>configure SMTP</a> with a username and password, even if <code>SMTP Authentication Mechanism</code> is set to none.
    </p>
    
* **Notifications-UI** deploys a dashboard for users to manage notification subscriptions.

* **Push Pivotal Account** deploys Pivotal Account, a dashboard that allows users to create and manage their accounts. In the Pivotal Account dashboard, users can launch applications, manage their profiles, manage account security, manage notifications, and manage approvals. See the [Enabling Pivotal Account](../opsguide/pivotal-account.html) topic for more information. 

* **Push Autoscaling** enables you to configure your apps to automatically scale in response to changes in their usage load. See the [Scaling an Application Using Autoscaler](../appsman-services/autoscaler/using-autoscaler.html) topic for more information.

* **Register Autoscaling Service Broker** makes the Autoscaling service available to your applications. Without this errand, you cannot bind the Autoscaling app to your apps.


