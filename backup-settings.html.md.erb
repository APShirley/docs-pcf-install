---
title: Backing Up Pivotal CF
---

Refer to this topic for help backing up the contents of critical databases and
backing up and restoring your Pivotal CF installation settings.

<p class="note"><strong>Note</strong>: Contact Pivotal Support for help restoring your Pivotal CF installation from the backups that you create.</p>

## <a id='settings'></a>Backing Up and Restoring Installation Settings ##

Pivotal recommends that you back up your installation settings by exporting
frequently.
Always export an installation before importing a new one.
Import an installation to restore your settings or to share your settings with
another user.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings. It does not back up your VMs.</p>

### <a id='export'></a>Exporting an Installation ###

On the the Product Installation Dashboard, click the gear icon and select **Export installation settings**.
This option is only available after you have deployed at least one time.

<%= image_tag("action.png") %>

**Export installation settings** exports the current Pivotal CF installation
settings and assets.
When you export an installation, the exported file contains the base VM images,
necessary packages, and references to the installation IP addresses.
As a result, an export can be 5 GB or more.

### <a id='import'></a>Importing an Installation ###

From the Product Installation Dashboard, click the gear icon and select **Import installation settings**.

<%= image_tag("action.png") %>

**Import installation settings** imports the settings and assets of an existing
Pivotal CF installation.
Importing an installation overwrites any existing installation.

## <a id='encrypt-key'></a>Backing Up the Cloud Controller DB Encryption Key ##

From the Product Installation Dashboard, select **Pivotal Elastic Runtime > Credentials** and locate the Cloud Controller section.
Record the Cloud Controller DB encryption credentials.
You must provide these credentials if you contact Pivotal Support for help
restoring your installation.

<%= image_tag("db-key.png") %>

## <a id='manifest'></a>Download the BOSH Deployment Manifest ##

1. Install Ruby and the [BOSH CLI Ruby gem](http://docs.cloudfoundry.org/bosh/bosh-cli.html) on a machine outside your
Pivotal CF system deployment.
1. In Ops Manager, browse to **Ops Manager Director > Status > Ops Manager Director** and note the IP address.
This is the BOSH Director IP address.

    <%= image_tag("director-ip.png") %>

1. In Ops Manager, browse to **Ops Manager Director > Credentials > Ops Manager** and note the Director credentials.

    <%= image_tag("director-creds.png") %>

1. Target the BOSH Director using the address and credentials you noted:

    ```
    $ bosh target 172.16.66.17
    Target set to `microbosh-3ac4e7a1faf8752dd349'
    Your username: director
    Enter password: ********************
    Logged in as `director'
    ```
    <p class="note"><strong>Note</strong>: If <code>bosh target</code> does not prompt you for your username and password, run <code>bosh login</code>.</p>

1. Locate the name of the current BOSH deployment:

    ```
	$ bosh deployments
	+-------------------------+--------------------------------+-------------------------------+
	| Name                    | Release(s)                     | Stemcell(s)                   |
	+-------------------------+--------------------------------+-------------------------------+
	| cf-bee19d9c7d2f0c4fce8a | cf/170                         | bosh-vsphere-esxi-ubuntu/2366 |
	|                         | push-console-release/23        |                               |
	|                         | runtime-verification-errands/2 |                               |
	+-------------------------+--------------------------------+-------------------------------+

	Deployments total: 1
    ```
1. Use `bosh download manifest DEPLOYMENT-NAME LOCAL-SAVE-NAME` to download and
save the current BOSH deployment manifest.
You need this manifest to locate information about your databases.
The DEPLOYMENT-NAME is the name of the current BOSH deployment.
Use `cf.yml` as the LOCAL-SAVE-NAME.
<br /><br />
    Example:

    ```
    $ bosh download manifest cf-bee19d9c7d2f0c4fce8a cf.yml
    Deployment manifest saved to `cf.yml'
    ```

## <a id='databases'></a>Backing Up Critical Databases ##

Refer to this section for help backing up databases associated
with your Pivotal CF installation.

Your Elastic Runtime deployment contains several critical data stores that must be present for a complete restore.
You must back up each of the following:

* Cloud Controller Database
* UAA Database
* Console Database
* The NFS Server

### <a id='ccdb'></a>Back Up the Cloud Controller Database ###

1. Run `bosh status` and record the UUID.

    Example:

    ```
    $ bosh status
    Config
                 /Users/pivotal/.bosh_config
    Director
      Name       microbosh-vcloud-b340a7ecc329a7573fd7
      URL        https://192.240.155.231:25555
      Version    1.2524.0 (release:0501e461 bosh:0501e461)
      User       director
      UUID       5467db1e-1f2f-4558-b950-cd3c357d65c4
      CPI        vcloud
      dns        enabled (domain_name: microbosh)
      compiled_package_cache disabled
      snapshots  disabled

    Deployment
      not set
    ```

1. Open the downloaded `cf.yml` file in a text editor. Replace the value for
`director_uuid` with the UUID that you found by running `bosh status`.

    For this example, `cf.yml` includes the line:

    ```
    director_uuid: 5467db1e-1f2f-4558-b950-cd3c357d65c4
    ```

1. Run `bosh deployment cf.yml` to set the `cf.yml` file as your deployment
manifest.

1. Run `bosh stop cloud_controller` to stop the Cloud Controller process. Ensure that each section reports `No changes`.

	```
	$ bosh stop cloud_controller
	You are about to stop cloud_controller/0
	Detecting changes in deployment...

	Releases
	No changes

	Compilation
	No changes

	Update
	No changes

	Resource pools
	No changes

	Networks
	No changes

	Jobs
	No changes

	Properties
	No changes
    ```
    <p class="note"><strong>Note</strong>: If the <code>bosh stop
cloud_controller</code> command indicates that changes are pending, terminate
	the backup process and contact Pivotal Support.
    Proceeding with the deployment if there are pending changes will apply any
    enqueued changes, possibly putting your installation in a bad state.
    Backups are only supported with a clean installation.</p>

    If the output of the `bosh stop cloud_controller` command indicates that 
	there are no changes, run the `--force` version of the same command:

    `bosh stop cloud_controller --force`

1. In `cf.yml`, locate the `ccdb` component and note the address and password:

    ```
    ccdb:
	      address: 172.16.78.25
	      port: 2544
	      db_scheme: postgres
	      roles:
	      - tag: admin
	        name: admin
	        password: ****************
	```

1. SSH into the CCDB VM.

1. Use `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the CCDB VM.

    Example:

    ```
    $ root@172.16.78.25:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 172.16.78.25 -U admin -p 2544 ccdb > ccdb.sql
```

1. Exit from the CCDB VM.

1. Use `scp` to copy the exported database to your local machine.

    Example:

    ```
    $ scp vcap@172.16.78.25:ccdb.sql
    ```

### <a id='uaadb'></a>Back Up the UAA Database ###

1. In `cf.yml`, locate the `uaadb` component and note the address and password:

    ```
    uaadb:
          address: 172.16.78.30
          port: 2544
          db_scheme: postgresql
          roles:
          - tag: admin
            name: root
            password: ***************
    ```

1. SSH into the UAA DB VM.

1. Use `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the UAA DB VM.

    Example:

    ```
    $ root@172.16.78.30:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 172.16.78.30 -U root -p 2544 uaa > uaa.sql
```

1. Exit from the UAA DB VM.

1. Use `scp` to copy the exported database to your local machine.

    Example:

    ```
    $ scp vcap@172.16.78.30:uaa.sql
    ```

### <a id='consoledb'></a>Back Up the Console Database ###

1. In `cf.yml`, locate the `consoledb` component and note the address and password:

    ```
    consoledb:
      address: 172.16.78.33
      port: 2544
      db_scheme: postgresql
      roles:
      - tag: admin
        name: root
        password: *****************
    ```

1. SSH into the Console DB VM.

1. Use `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the Console DB VM.

    Example:

    ```
	$ root@172.16.78.33:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 172.16.78.33 -U root -p 2544 console > console.sql
	```

1. Exit from the Console BD.

1. Use `scp` to copy the exported database to your local machine.

    Example:
    ```
    $ scp vcap@172.16.78.33:console.sql
    ```

### <a id='nfs'></a>Back Up the NFS Server ###

1. In `cf.yml`, locate the `nfs_server` component and note the address:

    ```
    nfs_server:
      address: 10.0.0.10
      network: 10.0.0.0/24
    syslog_aggregator:
      address:
      port:
    ```

1. In Ops Manager, browse to **Elastic Runtime > Credentials** and note the NFS Server credentials.

    <%= image_tag("nfs-creds.png") %>

1. SSH into the NFS server VM and create a TAR file:

    `$ ssh vcap@10.0.0.10 'cd /var/vcap/store && tar cz shared' > nfs.tar.gz`

    <p class="note"><strong>Note</strong>: The TAR file that you create to back up the NFS server might be large. To estimate the size of the TAR file before you create it, run the following command:

    <code>tar -cf - /dir/to/archive/ | wc -c</code></p>

### <a id='cc-start'></a>Start Cloud Controller ###

Run `bosh start cloud_controller` to restart the Cloud Controller.

### <a id='runtime'></a>Back Up Pivotal MySQL Server ###

<p class="note"><strong>Note</strong>: As of PCF 1.3, the Elastic Runtime deploy contains an embedded MySQL Server that serves as the data store for the <code>app\_usage\_events</code> service.

1. In Ops Manager, browse to **Pivotal Elastic Runtime > Status > MySQL Server** and note the CID.

    <%= image_tag("elastic_runtime.jpg") %>

    <%= image_tag("mysql.jpg") %>

2. Download and save the BOSH deployment manifest for MySQL Server. You need this manifest to locate information about your databases.

    ```
    $ bosh download manifest p-mysql-1e136692e37b3ec1f942 mysql.yml

    Deployment manifest saved to `mysql.yml'
    ```

3. In mysql.yml, locate the IP address and password for the MySQL node:

    ```
     mysql_node:
          host: 172.16.78.60
          admin_password: c0eeec42e465428312fd
        services:
        - name: p-mysql
    ```

4.  Dump the data from the p-mysql DB and save it:

    `$ mysqldump -u root -p -h 172.16.78.60 --all-databases > user_databases.sql`
