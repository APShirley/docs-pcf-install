---
title: Backing Up Pivotal CF
---

Refer to this topic for help backing up the contents of critical databases and
backing up and restoring your Pivotal CF installation settings. Pivotal
recommends that you back up your installation frequently.

<p class="note"><strong>Note</strong>: Contact Pivotal Support for help restoring your Pivotal CF
installation from the backups you created.</p>

## <a id='settings'></a>Back up and Restore Installation Settings ##

It is important to back up your installation settings by exporting frequently.
Always export an installation before importing a new one.
Import an installation to restore your settings or to share your settings with
another user.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings.
It does not back up your VMs.</p>

### <a id='export'></a>Exporting an installation ###

From the Product Dashboard, select **Actions > Export installation**.
This option is only available after you have deployed at least one time.

**Export installation** exports the current Pivotal CF installation with all of
its assets.
When you export an installation, the exported file contains references to the
installation IP addresses.
It also contains the base VM images and necessary packages.
As a result, an export can be very large (as much as 5 GB or more).

### <a id='import'></a>Importing an installation ###

From the Product Dashboard, select **Actions > Import installation**.

**Import installation** imports an existing Pivotal CF installation with all of
its assets.
When you import an installation, the prior installation will disappear and be
replaced by the newly imported one.

## <a id='encrypt-key'></a>Back Up the Cloud Controller DB Encryption Key ##

From the Product Dashboard, select **Pivotal Elastic Runtime > Credentials**
and locate the Cloud Controller section.
Record the Cloud Controller DB encryption credentials.
You must provide these credentials if you contact Pivotal Support for help
restoring your installation.

<%= image_tag("db-key.png") %>

## <a id='databases'></a>Back Up Critical Databases ##

Refer to this section for help backing up and restoring databases associated
with your Pivotal CF installation.
You must restore the contents of these databases in order to have a functional
restored PaaS.

Your Elastic Runtime deployment contains several critical data stores.
You will back up each of them in turn.
They are:

* Cloud Controller Database
* UAA Database
* Console Database
* The NFS Server

### <a id='manifest'></a>Download the BOSH Deployment Manifest ###

1. Install Ruby and the [BOSH CLI Ruby gem](http://docs.cloudfoundry.org/bosh/bosh-cli.html) on a machine outside your
Pivotal CF system deployment.
1. In Ops Manager, browse to **Ops Manager Director > Status > Ops Manager Director** and note the IP address.
This is the BOSH director IP address.

    <%= image_tag("director-ip.png") %>

1. In Ops Manager, browse to **Ops Manager Director > Credentials > Ops Manager** and note the Director credentials.

    <%= image_tag("director-creds.png") %>

1. Target the BOSH director using the address and credentials you noted:

    ```
    $ bosh target 172.16.66.17
    Target set to `microbosh-3ac4e7a1faf8752dd349'
    Your username: director
    Enter password: ********************
    Logged in as `director'
    ```
    <p class="note"><strong>Note</strong>: If <code>bosh target</code> does not prompt you for your username and password, run <code>bosh login</code>.</p>

1. Locate the name of the current BOSH deployment:

    ```
	$ bosh deployments
	+-------------------------+--------------------------------+-------------------------------+
	| Name                    | Release(s)                     | Stemcell(s)                   |
	+-------------------------+--------------------------------+-------------------------------+
	| cf-bee19d9c7d2f0c4fce8a | cf/170                         | bosh-vsphere-esxi-ubuntu/2366 |
	|                         | push-console-release/23        |                               |
	|                         | runtime-verification-errands/2 |                               |
	+-------------------------+--------------------------------+-------------------------------+

	Deployments total: 1
    ```
1. Use `bosh download manifest DEPLOYMENT-NAME LOCAL-SAVE-NAME` to download and
save the current BOSH deployment manifest.
You need this manifest to locate information about your databases.
The DEPLOYMENT-NAME is the name of the current BOSH deployment.
Use `cf.yml` as the LOCAL-SAVE-NAME.

Example:

```
$ bosh download manifest cf-bee19d9c7d2f0c4fce8a cf.yml
 Deployment manifest saved to `cf.yml'
```
## <a id='note on backing up'></a>A Note on Backing Up Databases: ##

You will be running Postgres DB/PostgreSQL (psql) commands on the VMs upon which the databases reside. This requires using the client installed on the VM. To find the correct path to this client, gain root access using the VM user's password.

`sudo su`
 
Find the locally installed psql client.

```
root@f184799b-f085-4d3e-9e43-c5fcdb7ce639:~# find /var/vcap | grep 'bin/psql'

/var/vcap/data/packages/postgres/5.1/bin/psql
```

Note that in the following backup steps the full path to the client must be used. 

### <a id='ccdb'></a>Back Up the Cloud Controller Database ###

1. Run `bosh status` and record the UUID.

    Example:

    ```
    $ bosh status
    Config
                 /Users/pivotal/.bosh_config
    Director
      Name       microbosh-vcloud-b340a7ecc329a7573fd7
      URL        https://192.240.155.231:25555
      Version    1.2524.0 (release:0501e461 bosh:0501e461)
      User       director
      UUID       5467db1e-1f2f-4558-b950-cd3c357d65c4
      CPI        vcloud
      dns        enabled (domain_name: microbosh)
      compiled_package_cache disabled
      snapshots  disabled

    Deployment
      not set
    ```

1. Open the downloaded `cf.yml` file in a text editor. Replace the value for
`director_uuid:` with the UUID found by running `bosh status`.

    For this example, `cf.yml` includes the line:

    ```
    director_uuis: 5467db1e-1f2f-4558-b950-cd3c357d65c4
    ```

1. Use `bosh deployment cf.yml` to set the `cf.yml` file as your deployment
manifest.

1. Stop the Cloud Controller process:

	First, run the following command.
	Ensure that each section reports `No changes`.

	```
	$ bosh stop cloud_controller
	You are about to stop cloud_controller/0
	Detecting changes in deployment...

	Releases
	No changes

	Compilation
	No changes

	Update
	No changes

	Resource pools
	No changes

	Networks
	No changes

	Jobs
	No changes

	Properties
	No changes
    ```
    <p class="note"><strong>Note</strong>: If the <code>bosh stop cloud_controller</code> command indicates that
    changes are pending, terminate the backup process and contact Pivotal
    Support.
    Proceeding with the deployment if there are pending changes will apply any
    enqueued changes, possibly putting your installation in a bad state.
    Backups are only supported with a clean installation.</p>

    If the output indicates that there are no changes, run the `--force`
    version of the same command:

    `bosh stop cloud_controller --force`

1. In `cf.yml`, locate the ccdb component and note the address and password:

    ```
    ccdb:
	      address: 172.16.78.25
	      port: 2544
	      db_scheme: postgres
	      roles:
	      - tag: admin
	        name: admin
	        password: ****************
	```

1. Dump the data from the CCDB and save it:

    `pg_dump -h 172.16.78.25 -U admin -p 2544 ccdb > ccdb.sql`

### <a id='uaadb'></a>Back Up the UAA Database ###

1. In `cf.yml`, locate the `uaadb` component and note the address and password:

    ```
    uaadb:
	      address: 172.16.78.30
	      port: 2544
	      db_scheme: postgresql
	      roles:
	      - tag: admin
	        name: root
	        password: ***************
	```

1. Dump the data from the UAADB and save it:

    `pg_dump -h 172.16.78.30 -U root -p 2544 uaa > uaa.sql`

### <a id='consoledb'></a>Back Up the Console Database ###

1. In `cf.yml`, locate the console component and note the address and password:

    ```
    consoledb:
      address: 172.16.78.33
      port: 2544
      db_scheme: postgresql
      roles:
      - tag: admin
        name: root
        password: *****************
    ```

1. Dump the data from the Console DB and save it:

    `pg_dump -h 172.16.78.33 -U root -p 2544 console > console.sql`

### <a id='nfs'></a>Back Up the NFS Server ###

1. In `cf.yml`, locate the NFS component and note the address:

    ```
    nfs_server:
      address: 10.0.0.10
      network: 10.0.0.0/24
    syslog_aggregator:
      address:
      port:
    ```

1. In Ops Manager, browse to **Elastic Runtime > Credentials** and note the NFS server credentials.

    <%= image_tag("nfs-creds.png") %>

1. SSH into the NFS server VM and create a TAR file:

    `ssh vcap@10.0.0.10 'cd /var/vcap/store && tar cz shared' > nfs.tar.gz`

    <p class="note"><strong>Note</strong>: The TAR file you create to back up the NFS server might be very
    large.
    To estimate the size of the TAR file before you create it, run the
    following command:

    <code>tar -cf - /dir/to/archive/ | wc -c</code></p>
	
	<p class="note"><strong>Note</strong>: For consistency, Pivotal recommends that you operate from the VM and run the <code>scp</code> command to move the TAR file to the client machine. For example: <code>/var/vcap/data/packages/postgres/5.1/bin/pg_dump -U vcap -p 2544 ccdb > ccdb.sql</code> Then, exit the VM and run the following command locally. <code>scp vcap@[ccdb vm ip]:ccdb.sql</code>

### <a id='cc-start'></a>Start Cloud Controller ###

Run `bosh start cloud_controller` to restart the Cloud Controller.

### <a id='runtime'></a>Back Up Pivotal MySQL Server ###

<p class="note"><strong>Note</strong>: As of PCF 1.3, MySQL Server has been embedded in the Elastic Runtime tile that serves as the data store for the <code>app\_usage\_events</code> service.

1. In Ops Manager, browse to **Pivotal Elastic Runtime > Status > MySQL Server** and note the CID. 

    <%= image_tag("elastic_runtime.jpg") %>
 
    <%= image_tag("mysql.jpg") %>

2. Download and save the BOSH deployment manifest for MySQL Server. You need this manifest to locate information about your databases. Use the name you identified in the previous step.

    ```
    $ bosh download manifest p-mysql-1e136692e37b3ec1f942 mysql.yml

    Deployment manifest saved to `mysql.yml'
    ```

3. In mysql.yml, locate the IP address and password for the MySQL node:

    ```
     mysql_node:
          host: 172.16.78.60
          admin_password: c0eeec42e465428312fd
        services:
        - name: p-mysql
    ```

4.  Dump the data from the p-mysql DB and save it:

`$ mysqldump -u root -p -h 172.16.78.60 --all-databases > user_databases.sql`
