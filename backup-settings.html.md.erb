---
title: Backing Up Pivotal CF
---

Refer to this topic for help backing up the contents of critical databases and
backing up and restoring your Pivotal CF installation settings.

<p class="note"><strong>Note</strong>: Contact Pivotal Support for help restoring your Pivotal CF installation from the backups that you create.</p>

## <a id='settings'></a>Backing Up and Restoring Installation Settings ##

Pivotal recommends that you back up your installation settings by exporting
frequently.
Always export an installation before importing a new one.
Import an installation to restore your settings or to share your settings with
another user.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings. It does not back up your VMs.</p>

### <a id='export'></a>Exporting an Installation ###

From the Product Installation Dashboard in the Ops Manager interface, click the gear icon and select **Export installation settings**.
This option is only available after you have deployed at least one time.

<%= image_tag("action.png") %>

**Export installation settings** exports the current Pivotal CF installation
settings and assets.
When you export an installation, the exported file contains the base VM images,
necessary packages, and references to the installation IP addresses.
As a result, an export can be 5 GB or more.

### <a id='import'></a>Importing an Installation ###

1. From the Product Installation Dashboard, click the gear icon and select **Import installation settings**.

1. Browse to and select a Pivotal CF installation file, then click **Import**.

    <%= image_tag("import-installation-file.png") %>

**Import installation settings** imports the settings and assets of an existing
Pivotal CF installation.
Importing an installation overwrites any existing installation.

## <a id='encrypt-key'></a>Backing Up the Cloud Controller DB Encryption Credentials ##

From the Product Installation Dashboard, select **Pivotal Elastic Runtime > Credentials** and locate the Cloud Controller section.
Record the Cloud Controller DB encryption credentials.
You must provide these credentials if you contact Pivotal Support for help
restoring your installation.

<%= image_tag("ccdb-encrypt-creds.png") %>

## <a id='manifest'></a>Download the BOSH Deployment Manifest ##

1. Install Ruby and the [BOSH CLI Ruby gem](http://docs.cloudfoundry.org/bosh/bosh-cli.html) on a machine outside your
Pivotal CF system deployment.
1. From the Installation Dashboard in Ops Manager, select **Ops Manager Director > Status** and record the IP address listed for the Ops Manager Director.
You access the BOSH Director using this IP address.

    <%= image_tag("director-ip.png") %>

1. Click **Credentials** and record the Director credentials.

    <%= image_tag("director-creds.png") %>

1. From a command line, target the BOSH Director using the IP address and credentials that you recorded:

    ```
    $ bosh target 10.0.0.3
    Target set to `microbosh-1234abcd1234abcd1234'
    Your username: director
    Enter password: ********************
    Logged in as `director'
    ```
    <p class="note"><strong>Note</strong>: If <code>bosh target</code> does not prompt you for your username and password, run <code>bosh login</code>.</p>

1. Run `bosh deployments` to identify the name of the current BOSH deployment:

    ```
	$ bosh deployments
	+-----------------+--------------------------+-------------------------------------------------+
	| Name            | Release(s)               | Stemcell(s)                                     |
	+-----------------+--------------------------+-------------------------------------------------+
	| cf-5678dcba5678 | cf-mysql/10              | bosh-vsphere-esxi-ubuntu-trusty-go_agent/2690.3 |
	|                 | cf/183.2                 |                                                 |
	|                 | push-console-release/207 |                                                 |
	+-----------------+--------------------------+-------------------------------------------------+
    ```

1. Run `bosh download manifest DEPLOYMENT-NAME LOCAL-SAVE-NAME` to download and
save the current BOSH deployment manifest.
You need this manifest to locate information about your databases.
Replace DEPLOYMENT-NAME with the name of the current BOSH deployment.
For this procedure, use `cf.yml` as the LOCAL-SAVE-NAME.
<br /><br />
    Example:

    ```
    $ bosh download manifest cf-5678dcba5678 cf.yml
    Deployment manifest saved to `cf.yml'
    ```

## <a id='databases'></a>Backing Up Critical Databases ##

Refer to this section for help backing up databases associated
with your Pivotal CF installation.

Your Elastic Runtime deployment contains several critical data stores that must be present for a complete restore.
You must back up each of the following:

* Cloud Controller Database
* UAA Database
* Apps Manager Database
* The NFS Server

### <a id='ccdb'></a>Back Up the Cloud Controller Database ###

1. Run `bosh stop cloud_controller-partition-default_az_guid` and `bosh stop cloud_controller_worker-partition-default_az_guid` to stop the Cloud Controller jobs. Ensure that each section reports `No changes`.

	```
	$ bosh stop cloud_controller-partition-default_az_guid
	You are about to stop cloud_controller/0
	Detecting deployment changes
    ----------------------------
	Releases
	No changes

	Compilation
	No changes

	Update
	No changes

	Resource pools
	No changes

	Networks
	No changes

	Jobs
	No changes

	Properties
	No changes
    ```
    <p class="note"><strong>Note</strong>: If either of the <code>bosh stop cloud_controller-partition-default_az_guid</code> or <code>bosh stop cloud_controller_worker-partition-default_az_guid</code> commands indicate that changes are pending, terminate the backup process and contact Pivotal Support. Proceeding with the deployment if there are pending changes will apply any enqueued changes, possibly putting your installation in a bad state. Backups are only supported with a clean installation.</p>

1. If the output of the `bosh stop` commands indicate that there are no changes, run the commands again with the `--force` option:
  ```
  bosh stop cloud\_controller-partition-default\_az_guid --force
  bosh stop cloud\_controller-partition-default\_az_guid --force
  ```

1. In `cf.yml`, locate the `ccdb` component and record the IP address and password:

    ```
    ccdb:
	      address: 10.85.52.96
	      port: 2544
	      db_scheme: postgres
	      roles:
	      - tag: admin
	        name: admin
	        password: baba1212baba1212
	```

1. SSH into the CCDB VM as the admin using the IP address and password recorded in the previous step.

1. Run `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the CCDB VM.

    Example:

    ```
    $ root@10.85.52.96:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 10.85.52.96 -U admin -p 2544 ccdb > ccdb.sql
```

1. Exit from the CCDB VM.

1. Run `scp` to copy the exported database to your local machine.

    Example:

    ```
    $ scp vcap@10.85.52.96:ccdb.sql
    ```

### <a id='uaadb'></a>Back Up the UAA Database ###

1. In `cf.yml`, locate the `uaadb` component and record the IP address and password:

    ```
    uaadb:
          address: 10.85.52.101
          port: 2544
          db_scheme: postgresql
          roles:
          - tag: admin
            name: root
            password: ***************
    ```

1. SSH into the UAA DB VM as the admin using the IP address and password recorded in the previous step.

1. Run `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the UAA DB VM.

    Example:

    ```
    $ root@10.85.52.101:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 10.85.52.101 -U root -p 2544 uaa > uaa.sql
```

1. Exit from the UAA DB VM.

1. Run `scp` to copy the exported database to your local machine.

    Example:

    ```
    $ scp vcap@10.85.52.101:uaa.sql
    ```

### <a id='consoledb'></a>Back Up the Apps Manager Database ###

1. In `cf.yml`, locate the `consoledb` component and record the IP address and password:

    ```
    consoledb:
      address: 10.85.52.104
      port: 2544
      db_scheme: postgresql
      roles:
      - tag: admin
        name: root
        password: *****************
    ```

1. SSH into the Apps Manager DB VM as the admin using the IP address and password recorded in the previous step.

1. Run `find /var/vcap | grep 'bin/psql'` to find the locally installed psql client on the Apps Manager DB VM.

    Example:

    ```
	$ root@10.85.52.104:~# find /var/vcap | grep 'bin/psql'

    /var/vcap/data/packages/postgres/5.1/bin/psql
    ```

1. Run `pg_dump` from the locally installed psql client to export the database:

    Example:

    ```
    $ /var/vcap/data/packages/postgres/5.1/bin/psql/pg_dump -h 10.85.52.104 -U root -p 2544 console > console.sql
	```

1. Exit from the Apps Manager DB.

1. Run `scp` to copy the exported database to your local machine.

    Example:
    ```
    $ scp vcap@10.85.52.104:console.sql
    ```

### <a id='nfs'></a>Back Up the NFS Server ###

1. In `cf.yml`, locate the `nfs_server` component and note the address:

    ```
    nfs_server:
      address: 10.0.0.10
      network: 10.0.0.0/24
    syslog_aggregator:
      address:
      port:
    ```

1. From the Installation Dashboard in Ops Manager, select **Elastic Runtime** and click **Credentials**. Record the NFS Server credentials.

    <%= image_tag("nfs-creds.png") %>

1. SSH into the NFS server VM using the NFS Server and create a TAR file:

    `$ ssh vcap@10.0.0.10 'cd /var/vcap/store && tar cz shared' > nfs.tar.gz`

    <p class="note"><strong>Note</strong>: The TAR file that you create to back up the NFS server might be large. To estimate the size of the TAR file before you create it, run the following command:

    <code>tar -cf - /dir/to/archive/ | wc -c</code></p>

### <a id='cc-start'></a>Start Cloud Controller ###

Run `bosh start cloud_controller` to restart the Cloud Controller.

### <a id='runtime'></a>Back Up Pivotal MySQL Server ###

<p class="note"><strong>Note</strong>: The Elastic Runtime deploy contains an embedded MySQL Server that serves as the data store for the <code>app_usage_events</code> service.</p>

1. From the Installation Dashboard in Ops Manager, select **Pivotal Elastic Runtime**. Click **Status** and record the CID of **MySQL Server**.

    <%= image_tag("mysql-cid.png") %>

2. Download and save the BOSH deployment manifest for MySQL Server. You need this manifest to locate information about your databases.

    ```
    $ bosh download manifest p-mysql-1e136692e37b3ec1f942 mysql.yml

    Deployment manifest saved to `mysql.yml'
    ```

3. In mysql.yml, locate the IP address and password for the MySQL node:

    ```
     mysql_node:
          host: 10.85.52.105
          admin_password: c0eeec42e465428312fd
        services:
        - name: p-mysql
    ```

4.  Dump the data from the p-mysql DB and save it:

    `$ mysqldump -u root -p -h 10.85.52.105 --all-databases > user_databases.sql`

<p class="note"><strong>Note</strong>: Contact Pivotal Support for help restoring your Pivotal CF installation from the backups that you create.</p>
