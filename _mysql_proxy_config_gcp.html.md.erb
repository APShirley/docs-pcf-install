<p class="note"><strong>Note</strong>: You only need to configure this section if you have selected <strong>Internal Databases - MySQL</strong> in the <strong>Databases</strong> section.</p>

1. Select **Internal MySQL**. 

1. In the **MySQL Proxy IPs** field, enter one or more comma-delimited IP addresses that are not in the reserved CIDR range of your network. If a MySQL node fails, these proxies re-route connections to a healthy node. See the [Proxy](http://docs.pivotal.io/p-mysql/index.html#proxy) section of the _MySQL for PCF_ topic for more information.</p>

1. (Optional) Configure round-robin DNS to spread requests across your MySQL proxies. Only perform this step if you want to approximate load balancing on your internal MySQL proxies. 
  1. Create a DNS <code>A Record</code> to round robin against your IP addresses. For example:
	<%= image_tag("mysql-a-record.png") %>
  1. In the **MySQL Service Hostname** field, enter the hostname you created for round-robin DNS. If you leave this field blank, components are configured with the IP address of the first proxy instance entered in the **MySQL Proxy IPs** field.
  <p class="note"><strong>Caution</strong>: Round-robin DNS does not handle component availability as well as a load balancer. If one or more of the database proxies fail, components that rely on the MySQL database can become unavailable. At time of publication, GCP load balancers only support access to public IP addresses.</p>
	<%= image_tag("mysql-proxy-ips.png") %>

1. In the **Replication canary time period** field, leave the default of 30 seconds or modify the value based on your deployment requirements. Lower numbers cause the canary to run more frequently, which adds load to the database.

1. In the **Replication canary read delay** field, leave the default of 20 seconds or increase the value. This field configures how long the canary waits, in seconds, before verifying that data is replicating across each MySQL node. Clusters under heavily load can experience a small replication lag as write-sets are committed across the nodes.

1. (**Required**): In the **E-mail address** field, enter the email address where the MySQL service should send alerts when the cluster experiences a replication issue or when a node is not allowed to auto-rejoin the cluster.

1. To prohibit the creation of command line history files on the MySQL nodes, deselect the **Allow Command History** checkbox.

1. For **Cluster Probe Timeout**, enter the maximum amount of time, in seconds, that a new node will search for existing
cluster nodes. If left blank, the default value is 10 seconds.

	<%= image_tag("mysql-replication-canary.png") %>

1. Under **Automated Backups Configuration**, select **Disable automatic backups of MySQL**.
  <p class="note warning"><strong>WARNING</strong>: Pivotal does not support restoring the internal MySQL database from a full backup because it degrades the Galera MySQL cluster. To backup and restore the internal MySQL database, you must use [BOSH Backup and Restore (BBR)](http://docs.pivotal.io/pivotalcf/2-0/customizing/backup-restore/index.html). For more information on this issue, see the following Pivotal Knowledge Base article: [Restore from PAS Automated Database Backup is Not Supported in 1.11 and later](https://discuss.pivotal.io/hc/en-us/articles/360001817593-Restore-from-PAS-Automated-Database-Backup-is-Not-Supported-in-1-11-and-later-).</p> 

1. If you want to log audit events for internal MySQL, select **Enable server activity logging** under **Server Activity Logging**.
	1. For the **Event types** field, you can enter the events you want the MySQL service to log. By default, this field includes `connect` and `query`, which tracks who connects to the system and what queries are processed. For more information, see the [Logging Events](https://mariadb.com/kb/en/mariadb/about-the-mariadb-audit-plugin/#logging-events) section of the MariaDB documentation.

		![Server Activity Logging, Load Balancer Thresholds](internal_mysql_bottom.png)

1. Enter values for the following fields:
	* **Load Balancer Healthy Threshold**: Specifies the amount of time, in seconds, to wait until declaring the MySQL proxy instance started. This allows an external load balancer time to register the instance as healthy.
	* **Load Balancer Unhealthy Threshold**: Specifies the amount of time, in seconds, that the MySQL proxy continues to accept connections before shutting down. During this period, the healthcheck reports as unhealthy to cause load balancers to fail over to other proxies. You must enter a value greater than or equal to the maximum time it takes your load balancer to consider a proxy instance unhealthy, given repeated failed healthchecks.

1. If you want to enable the MySQL interruptor feature, select the checkbox to **Prevent node auto re-join**. This feature stops all writes to the MySQL database if it notices an inconsistency in the dataset between the nodes. For more information, see the [Interruptor](http://docs.pivotal.io/p-mysql/1-10/troubleshooting.html#interruptor) section in the MySQL for PCF documentation. 

1. Click **Save**.
