The Advanced Features section of Elastic Runtime includes new functionality that may have certain constraints. Although these features are fully supported, Pivotal recommends caution when using them in production environments.

### <a id="disk-memory-overcommit"></a>Diego Cell Memory and Disk Overcommit

If your apps do not use the full allocation of disk space and memory set in the **Resource Config** tab, you might want use this feature. These fields control the amount to overcommit disk and memory resources to each Diego Cell VM.

For example, you might want to use the overcommit if your apps use a small amount of disk and memory capacity compared to the amount set in the **Resource Config** settings for **Diego Cell**.

<p class="note"><strong>Note</strong>: Due to the risk of app failure and the deployment-specific nature of disk and memory use, Pivotal has no recommendation about how much, if any, memory or disk space to overcommit.</p>

To enable overcommit, follow these steps:

1. Select **Advanced Features**.

    <%= image_tag("./disk-memory-overcommit.png") %>

1. Enter the total desired amount of Diego cell memory value in the **Cell Memory Capacity (MB)** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Cell memory capacity settings that this field overrides.

1. Enter the total desired amount of Diego cell disk capacity value in the **Cell Disk Capacity (MB)** field. Refer to the **Diego Cell** row in the **Resource Config** tab for the current Cell disk capacity settings that this field overrides.

1. Click **Save**.

<p class="note"><strong>Note</strong>: Entries made to each of these two fields set the total amount of resources allocated, not the overage.</p>

### <a id="disable-priviledge"></a> Disable Privileged App Containers

By default, Pivotal Cloud Foundry deploys apps in privileged containers. Apps deployed to privileged containers can gain access to their host operating system. In general, Pivotal recommends disabling privileged containers by selecting this option.

<p class="note"><strong>Note</strong>: Do not select <strong>Disable privileged app containers</strong> if you are running applications that use FUSE file system support. </p>

To disable privileged app containers, follow these steps:

1. Select **Advanced Features**.

    <%= image_tag("./disk-memory-overcommit.png") %>

1. Select **Disable privileged app containers**. This setting only applies to newly pushed apps, so you must restart any pre-existing apps to apply this option.

1. Click **Save**.

<p class="note"><strong>Note</strong>: Containers based on Docker images are always unprivileged, regardless of this setting.</p>

### <a id="enable-tcp"></a>Enable TCP Routing

TCP Routing enables applications to be run on PCF that require inbound requests on non-HTTP protocols. Before enabling TCP Routing, review the [Pre-Deployment Steps](../adminguide/enabling-tcp-routing.html) that describe required networking infrastructure changes. 

1. TCP Routing is disabled by default. To enable this feature, select the **Enable TCP Routing** radio button. 

	<%= image_tag("./tcp_routing.png") %>

1. In **TCP Router IPs**, enter the IP address(es) you would like assigned to the TCP Routers. The addresses must be within your subnet CIDR block. These will be the same IP addresses you configured your load balancer with in [Pre-Deployment Steps](../adminguide/enabling-tcp-routing.html), unless you configured DNS to resolve the TCP domain name directly to an IP you've chosen for the TCP router. You can enter multiple values as a comma-delimited list or as a range. For example, `10.254.0.1, 10.254.0.2` or `10.254.0.1-10.254.0.2`. 

1. In **TCP Routing Ports**, enter a range of ports to be allocated for TCP Routes. For each TCP route you want to support, you must reserve a port. This will be the same range of ports you configured your load balancer with in [Pre-Deployment Steps](../adminguide/enabling-tcp-routing.html), unless you configured DNS to resolve the TCP domain name to the TCP router directly. This field takes a comma-delimited list of individual ports and ranges, for example `1024-1099,30000,60000-60099`. Configuration of this field is only applied on the first deploy; you may later update the port range using the CLI. For details modifying the port range, see [Router Groups](../adminguide/enabling-tcp-routing.html#router-groups).

1. Click **Save**.

### <a id="disable-tcp"></a>Disable TCP Routing

1. If you want to disable TCP routing after enabling it, click **Select this option if you prefer to enable TCP Routing at a later time**.

1. Manually remove the TCP routing domain. 

1. Click **Save**.

### <a id="rfc_whitelist"></a>Whitelist for Non-RFC-1918 Private Networks

Some private networks require extra configuration so that internal filestore (WebDAV) can communicate with other PCF processes. 

The **Whitelist for non-RFC-1918 Private Networks** field is provided for deployments that use a non-RFC 1918 private network. This is typically a private network other than `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`. 

Most PCF deployments do not require any modifications to this field.

To add your private network to the whitelist, perform the following steps:

1. Select **Advanced Features**.

1. Append a new `allow` rule to the existing contents of the **Whitelist for non-RFC-1918 Private Networks** field. 
  <%= image_tag("./nonrfc_whitelist.png") %>
  Include the word `allow`, the network CIDR range to allow, and a semi-colon (`;`) at the end. For example:
  <pre class="terminal">
  allow 172.99.0.0/24;
  </pre>
   
1. Click **Save**.

### <a id="cf_cli_timeout"></a> CF CLI Connection Timeout

The CF CLI Connection Timeout field allows you to override the default 5 second timeout of the Cloud Foundry Command Line Interface (cf CLI) used within your PCF deployment. This timeout affects the `cf` command used to push Elastic Runtime errand apps such as Notifications, Autoscaler, Apps Manager and so on. 

Set the value of this field to a higher value, in seconds, if you are experiencing domain name resolution timeouts when pushing errands in Elastic Runtime.

To modify your CF CLI connection timeout, perform the following steps:

1. Select **Advanced Features**.

1. Add a value, in seconds, to the **CF CLI Connection Timeout** field. 
  <%= image_tag("./cf_cli_connection_timeout.png") %>
   
1. Click **Save**.


