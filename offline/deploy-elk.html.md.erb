---
title: Deploy ELK Tile
---

From the offline Ops Manager, upload the releases and stemcell for the ELK installation:

<p class="terminal">
$ bosh -n upload release /opt/artifacts/releases/logsearch-boshrelease-23.0.0.tgz --skip-if-exists
</p>
<p class="terminal">
$ bosh -n upload release /opt/artifacts/releases/logsearch-for-cloudfoundry-7+dev.7.tgz --skip-if-exists
</p>
<p class="terminal">
$ bosh -n upload release /opt/artifacts/releases/elasticsearch-plugins-1.0.tgz --skip-if-exists
</p>
<p class="terminal">
$ bosh -n upload release /opt/artifacts/releases/logsearch-for-bosh-0+dev.21.tgz --skip-if-exists
</p>
<p class="terminal">
$ bosh -n upload stemcell /opt/artifacts/stemcells/bosh-stemcell-3026-aws-xen-ubuntu-trusty-go_agent.tgz --skip-if-exists
</p>
<p class="note"><strong>Note</strong>: The ELK tile depends on stemcell version 3026 as the latest supported version.
</p>


1. Modify the [ELK Deployment Manifest](https://github.com/pivotal-federal-field-engineering/dark-chiron-aws/tree/master/deployments/p-elk-chiron.yml "Manifest"): p-elk-chiron.yml in the deployments directory on the offline Ops Manager to suit the environment. Configure the following parameters as necessary:
    1. Director UUID (using <BOSH-STATUS> above)
    1. Network Cloud Properties, Subnet-ID: (pcf-private-subnet, AWS Console: VPC)
    1. Cloud Foundry system domain: chiron.vi-works.io 

1. Set deployment:
<p class="terminal">
$ bosh -n deployment /home/ubuntu/workspace/dark-chiron-aws/deployments/p-elk-chiron.yml
</p>

1. Deploy ELK:
<p class="terminal">
$ bosh -n deploy
</p>

1. Run BOSH utilities to confirm successful deployment:
<p class="terminal">
$ bosh -n vms p-elk-chiron
$ bosh -n cck --report
</p>

1. Run BOSH errands to install kibana for ELK:
<p class="terminal">
$ bosh -n run errand push-kibana
</p>