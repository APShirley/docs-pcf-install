---
title: PAS Component Behavior During Backup
owner: Component Teams
---

This topic describes the operational impact of backing up Pivotal Application Service (PAS) components with BBR. To ensure correctness of backups, each component that requires backup has its own set of scripts. The sections in this topic describe the behavior of each component during backup. 

## <a id="app-usage-service"></a> App Usage Service

## <a id="app-autoscaler"></a> App Autoscaler

The [App Autoscaler service](../../appsman-services/autoscaler/using-autoscaler.html) is unavailable during backup. You cannot access the UI or API. For any apps configured to use the the App Autoscaler, the service does not scale these apps during backup. 

The backup process for App Autoscaler is as follows:

<p class="note"><strong>Note</strong>: The App Autoscaler service runs as a set of Cloud Foundry apps in the <code>system</code> org.</p>

<table>
	<tr>
		<th style="width:25%">Stage</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>1: Pre-backup lock</td>
		<td>The Autoscaler apps in the <code>system</code> org stop. This lock occurs before the Cloud Controller and UAA components lock. </td>
	</tr>
	<tr>
		<td>2: Backup</td>
		<td>The BBR SDK backup script runs to backup the App Autoscaler database.</td>
	</tr>
	<tr>
		<td>3: Post-backup unlock</td>
		<td>The Autoscaler apps in the <code>system</code> org start again. This unlock occurs after the Cloud Controller and UAA components unlock.</td>
	</tr>
</table>

Because the database for App Autoscaler is small, the majority of downtime comes from stopping and starting the apps. 

## <a id="cloud-controller"></a> Cloud Controller

The Cloud Controller is unavailable during backup. Apps and Services continue to run as normal, but you cannot perform operations that require the Cloud Controller API (CAPI). This includes the following:

* Pushing new apps or create new services
* Modifying existing apps or services 
* Using the Cloud Foundry Command Line Interface (cf CLI), Apps Manager, or any other client of CAPI, such as the Java client used by Spring apps

The backup process for the Cloud Controller is as follows:

<table>
	<tr>
		<th style="width:25%">Stage</th>
		<th>Description</th>
	</tr>
	<tr>
		<td>1: Pre-backup lock</td>
		<td>The worker process on the <b>Cloud Controller Worker</b> VM stops and the server process on the <b>Cloud Controller</b> VM stops.</td>
	</tr>
	<tr>
		<td>2: Backup</td>
		<td>The BBR SDK backup script runs to backup the Cloud Controller database (CCDB), which contains state information for apps on your deployment.</td>
	</tr>
	<tr>
		<td>3: Post-backup unlock</td>
		<td>The worker process on the <b>Cloud Controller Worker</b> VM starts and the server process on the <b>Cloud Controller</b> VM starts.</td>
	</tr>
</table>

## <a id="credhub"></a> Runtime CredHub

## <a id="network-policy-server"></a> Network Policy Server

## <a id="notification-service"></a> Notification Service

## <a id="nfs-volume-services"></a> NFS Volume Service

The NFS service broker backup scripts rely on the locking of the Cloud Controller to stop traffic to its service. This is because the Cloud Controller is responsible for invoking the NFS service broker. 

When the Cloud Controller locks during backup, you cannot create or delete new instances or bindings of a volume service. However, apps already bound to a volume service continue to operate normally during backups.

The NFS service broker backup script performs a backup of the database used to store service instances and service bindings for the NFS service broker.

## <a id="routing-api"></a> Routing API

## <a id="uaa"></a> UAA