---
title: Backing Up Pivotal Cloud Foundry with BBR
owner: RelEng
---

<strong><%= modified_date %></strong>

<% $this_topic = 'backup-pcf' %>

<p class="note"><strong>Note</strong>: BBR is a beta feature in PCF v1.11.</p>

This topic describes the procedure for backing up your critical backend PCF components with BOSH Backup and Restore (BBR), a command-line tool for backing up and restoring BOSH deployments. To restore your backup, see the [Restoring Pivotal Cloud Foundry from Backup](restore-pcf.html) topic.

To back up PCF manually, see the <a href="backup-pcf.html">Backing Up Pivotal Cloud Foundry Manually</a> topic.

<p class="note"><strong>Note</strong>: You can only use BBR to back up PCF v1.11 and later. To back up earlier versions of PCF, perform the <a href="backup-pcf.html">manual procedures</a>.</p>

Pivotal recommends backing up your installation settings frequently, especially before making any changes to your PCF deployment, such as configuration of any tiles in Ops Manager.

During the backup, BBR stops the Cloud Controller API and the Cloud Controller workers to create a consistent backup. Only the API functionality, like pushing applications or using the Cloud Foundry Command Line Interface (cf CLI) are affected. The deployed applications do not experience downtime.

## <a id='supported'></a>Supported Components

BBR is a binary that can back up and restore BOSH deployments and BOSH Directors. BBR requires that the backup targets supply scripts that implement the backup and restore functions.

BBR backs up the following PCF components:

* Elastic Runtime
* BOSH Director

Service tiles have different [levels of integration](http://docs.pivotal.io/tiledev/stages.html). BBR may or may not be able to back up your service tiles depending on their level of integration. Consult the following list:

* Service brokers: You can back up and restore all brokered services with the procedures documented in this topic and in the [Restoring Pivotal Cloud Foundry from Backup](restore-pcf.html) topic. Because a brokered service runs external to PCF, BBR backs up and restores the VMs and the service instances, but not the service data.
* Managed services: Because managed services are BOSH releases, they must implement the BBR scripts. Otherwise, you cannot use BBR to back up and restore them. If the managed service has implemented BBR scripts, BBR backs up and restores both the VMs and the service data.
* On-demand services: You must perform additional steps to back up and restore on-demand services with BBR.

## <a id='workflow'></a>Workflow

Operators download the BBR binary and transfer it to a jumpbox. Then they run BBR from the jumpbox, specifying the name of the BOSH deployment to back up.

BBR examines the jobs in the BOSH deployment, and triggers the backup script for each release in the prescribed order. The backup artifacts are drained to the jumpbox, where the operator can transfer them to storage and use them to [restore](restore-pcf.html) PCF.

The following diagram shows a sample backup flow.

<%= image_tag('backup-flow.png') %>

## <a id='encrypt-key'></a>Step 1: Record the Cloud Controller Database Encryption Credentials ##

From the **Installation Dashboard**, select **Pivotal Elastic Runtime > Credentials** and locate the Cloud Controller section.
Record the Cloud Controller **DB Encryption Credentials**.
You must provide these credentials if you contact [Pivotal Support](https://support.pivotal.io) for help
restoring your installation.

<%= image_tag("ccdb-encrypt-creds.png") %>

## <a id='backup-preparer-node'></a> Step 2: Enable Backup Preparer Node

Perform the following steps to enable the backup preparer node:

1. Click **Internal MySQL** and under **Automated Backups Configuration**, select **Enable automated backups from MySQL to an S3 bucket or other S3-compatible file store**. Fill in the required fields with any text value, and set the cron to a date that doesn't exist, e.g. February 31st `0 0 12 31 2 ? *`. 
	<p class="note"><strong>Note</strong>: If you do not select this option, the backup will run successfully, but the subsequent restore will fail.</p>
1. In the Elastic Runtime tile, navigate to the **Resource Config** section and use the dropdown menu to scale up the **Backup Prepare Node** to one instance.
	<%= image_tag("backup-prepare-node.png") %>
1. Navigate back to the Ops Manager Installation Dashboard and click **Apply Changes** to redeploy.

## <a id='export'></a>Step 3: Export Installation Settings ##

Pivotal recommends that you back up your installation settings by exporting
frequently. This option is only available after you have deployed at least one time.
Always export an installation before following the steps in the [Import Installation Settings](./restore-pcf.html#import) section of the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings. It does not back up your virtual machines (VMs) or any external MySQL databases.</p>

From the **Installation Dashboard** in the Ops Manager interface, click your user name at the top right navigation. Select **Settings**.

**Export Installation Settings** exports the current PCF installation
settings and assets.
When you export an installation, the exported file contains the base VM images,
all necessary packages, and references to the installation IP addresses.
As a result, an exported installation file can exceed 5 GB in size.

<%= image_tag("settings.png") %>

## <a id="retrieve"></a> Step 4: Retrieve BOSH Director Address and Credentials

Perform the following steps to retrieve the IP address of your BOSH Director and the credentials for logging in:

<%= partial 'bosh_target_director' %>

## <a id='identify-deployment'></a> Step 5: Identify Your Deployment

After logging in to your BOSH Director, run `bosh deployments` to identify the name of the BOSH deployment that contains PCF. 

The following example displays information for a BOSH deployment named `cf-example`:

<pre class='terminal'>
$ bosh deployments
+-------------+--------------+-------------------------------------------------+
| Name        | Release(s)   | Stemcell(s)                                     |
+-------------+--------------+-------------------------------------------------+
| cf-example  | cf-mysql/10  | bosh-vsphere-esxi-ubuntu-trusty-go_agent/2690.3 |
|             | cf/183.2     |                                                 |
+-------------+--------------+-------------------------------------------------+
</pre>

## <a id='jumpbox'></a>Step 6: Set Up Your Jumpbox

Set up your jumpbox with the following settings:

* The jumpbox must have sufficient space for the backup. A PCF backup will be at least 1.5 GB in size.
* BBR connects to the VMs at their private IP address, so the jumpbox needs to be in the same network as the deployed VMs. BBR does not support SSH gateways.
* BBR copies the backed-up data from the VMs to the jumpbox, so ensure you have minimal network latency between them to reduce transfer times.

Consult the following table for more information about the network access permissions required by BBR.

<table>
<tr>
<th>VM</th>
<th>Default Port</th>
<th>Description</th>
</tr>
<tr>
<td>BOSH Director</td>
<td>25555</td>
<td>BBR interacts with the BOSH Director API.</td>
</tr>
<tr>
<td>Deployed Instances</td>
<td>22</td>
<td>BBR uses SSH to orchestrate the backup on the instances.</td>
</tr>
<tr>
<td>BOSH Director UAA</td>
<td>8443</td>
<td>BBR interacts with the UAA API for authentication, if necessary.</td>
</tr>
</table>

## <a id='scp'></a>Step 7: Transfer BBR to Your Jumpbox

Perform the following steps to transfer BBR to your jumpbox:

1. Download the [latest BBR release](https://network.pivotal.io/products/p-bosh-backup-and-restore).
1. Change the permissions of `bbr` in order to make it executable:
	<pre class="terminal">$ chmod a+x bbr</pre>
1. SCP the binary to your jumpbox:
	<pre class="terminal">$ scp LOCAL\_PATH\_TO\_BBR/bbr JUMPBOX\_USER/JUMPBOX\_ADDRESS</pre>
	If your jumpbox has access to the internet, you can also SSH into your jumpbox and use `wget`: 
	<pre class="terminal">
	$ ssh JUMPBOX\_USER/JUMPBOX\_ADDRESS -i YOUR\_CERTIFICATE.pem
	$ wget BBR\_RELEASE\_URL
	$ chmod a+x bbr
	</pre>

## <a id='check'></a> Step 8: Check Your Deployment

Perform the following steps to check that your BOSH Director is reachable and has a deployment that can be backed up:

1. SSH into your jumpbox:
	<pre class="terminal">
	$ ssh JUMPBOX\_USER/JUMPBOX\_ADDRESS -i YOUR\_CERTIFICATE.pem
	</pre>
1. Run the BBR pre-backup check:
	<pre class="terminal">
	$ BOSH\_CLIENT\_SECRET=BOSH\_CLIENT\_SECRET \
  	bbr deployment
	--target BOSH\_DIRECTOR\_IP \
  	--username BOSH\_CLIENT \
  	--deployment DEPLOYMENT\_NAME \
  	--ca-cert PATH\_TO\_BOSH\_SERVER\_CERT \
    pre-backup-check</pre>

    Replace the placeholder values as follows:
    * `BOSH_CLIENT`, `BOSH_CLIENT_SECRET`: This is the ***TBD*** BOSH UAA user provided here. 
    * `BOSH_DIRECTOR_IP`: You retrieved this value in the [Step 3: Retrieve BOSH Director Address and Credentials](#retrieve) section.
    * `DEPLOYMENT-NAME`: You retrieved this value in the [Step 4: Identify Your Deployment](#identify-deployment) section.
    * `PATH_TO_BOSH_SERVER_CERT`: This is the path to the BOSH Director’s Certificate Authority (CA) certificate, if the certificate is not verifiable by the local machine’s certificate chain.

1. If the pre-backup check succeeds, continue to the [next section](#bbr-backup). If it fails, the deployment you selected may not have the correct backup scripts, or the connection to the BOSH Director may have failed. 
If the following error occurred:
```
1 error occurred:

* The mysql restore script expects a backup script which produces mysql-artifact artifact which is not present in the deployment.
``` 

This happens because bbr requires the ERT MySQL Backup Prepare Node to be enabled. Follow the instructions [above](#backup-preparer-node) and then retry.

## <a id='bbr-backup'></a> Step 9: Back Up Your ERT Deployment

Run the BBR backup command from your jumpbox to back up your ERT deployment:
<pre class="terminal">
$ BOSH\_CLIENT\_SECRET=BOSH\_CLIENT\_SECRET \
	bbr deployment
	--target BOSH\_DIRECTOR\_IP \
	--username BOSH\_CLIENT \
	--deployment DEPLOYMENT\_NAME \
	--ca-cert PATH\_TO\_BOSH\_SERVER\_CERT \
	backup</pre>

Use the optional `--debug` flag to enable debug logs. See the [Logging](#logging) section for more information.	
<p class="note"><strong>Note</strong>: The BBR backup command can take a long time to complete. Pivotal recommends you run it independently of the SSH session, so that the process can continue running even if your connection to the jumpbox fails. The command above uses `nohup` but you could also run the command in a `screen` or `tmux` session.</p>
BBR stores each backup in the current working directory, in a directory of the same name as the deployment. As a result, you cannot run multiple backups of a deployment from the same working directory without first moving or renaming the existing backup. 

If the commands completes successfully, do the following:

1. Move the backup artifact off the jumpbox to your preferred storage space. The backup created by BBR consists of a folder with the backup artifacts and metadata files. However, Pivotal recommends compressing and encrypting the files. 
1. Make redundant copies of your backup and store them in multiple locations in order to minimize the risk of losing your backups in the event of a disaster.
1. Attempt a test restore on every backup in order to validate it by performing the procedures in the [Step 10: Validate Your Backup](#validate-backup) section below.

If the command fails, do the following:

1. Ensure all the parameters in the command are set.
1. Ensure the BOSH Director credentials are valid.
1. Ensure the specified deployment exists.
1. Consult the [Exit Codes](#exit-codes) section below. 

### <a id='exit-codes'></a>Exit Codes

The exit code returned by BBR indicates the status of the backup. The following table matches exit codes to error messages.

<table>
<tr>
<th>Value</th>
<th>Error</th>
</tr>
<tr>
<td>0</td>
<td>Success</td>
</tr>
<tr>
<td>1</td>
<td>General failure</td>
</tr>
<tr>
<td>4</td>
<td>The pre-backup lock failed.</td>
</tr>
<tr>
<td>8</td>
<td>The post-backup unlock failed. Your deployment may be in a bad state and requires attention.</td>
</tr>
<tr>
<td>16</td>
<td>The cleanup failed. This is a non-fatal error indicating that the utility has been unable to clean up open BOSH SSH connections to the deployment VMs. Manual cleanup may be required to clear any hanging BOSH users and connections.</td>
</tr>
</table>

If multiple failures occur, your exit code reflects a combination of values. Use bitwise AND to determine which failures occurred.

For example, the exit code `5` indicates that the pre-backup lock failed and a general error occurred. 

To check that a bit is set, use bitwise AND, as demonstrated by the following example of exit code `20`:

<pre class="highlight ruby"><code><span class="mi">20</span> <span class="o">|</span> <span class="mi">1</span>  <span class="o">==</span> <span class="mi">1</span>    <span class="c1"># false</span>
<span class="mi">20</span> <span class="o">|</span> <span class="mi">4</span>  <span class="o">==</span> <span class="mi">4</span>    <span class="c1"># true; lock failed</span>
<span class="mi">20</span> <span class="o">|</span> <span class="mi">8</span>  <span class="o">==</span> <span class="mi">8</span>    <span class="c1"># false</span>
<span class="mi">20</span> <span class="o">|</span> <span class="mi">16</span> <span class="o">==</span> <span class="mi">16</span>   <span class="c1"># true; cleanup failed</span>
</code></pre>

Exit code `20` indicates that the pre-backup lock failed and cleanup failed. 

### <a id='logging'></a>Logging

BBR outputs logs to stdout. By default, BBR logs:

* The backup and restore scripts that it finds
* When it starts or finishes a stage, such as pre-backup scripts or backup scripts
* When the process is complete
* When any error occurs

If more logging is needed, use the optional `--debug` flag to print the following information:

* Logs about the API requests made to the BOSH server
* All commands executed on remote instances
* All commands executed on local environment
* Standard in and standard out streams for the backup and restore scripts when they are executed

## <a id='bbr-backup-director'></a> Step 9: Back Up Your BOSH Director

Run the BBR backup command from your jumpbox to back up your BOSH director:
<pre class="terminal">
$ bbr director \
  --debug (OPTIONAL)
  --name NAME\_FOR\_BACKUP> \
  --private-key-path PATH\_TO\_PRIVATE\_KEY \
  --username USER\_NAME
  --host HOST \
  pre-backup-check
</pre>

Replace the placeholder values as follows:
   
 * `--name`: the name to be used for your backup artifact
 * `--username`: SSH username of the Director, which is `vcap`
 * `--private-key-path`: path to the SSH private key used to connect to the Director. To create a private key file, navigate to the Credentials tab in Ops Manager and click on the `Link to credential` for the `Bbr credential`. Save the private_key_pem to a file on your jumpbox. 
 * `--host`: address of the Director to back up, including port


## <a id='validate-backup'></a> Step 11: Validate Your Backup

**This section still needs a lot of work.**

After backing up PCF, you may want to validate your backup by restoring it to a similar environment and checking the applications. Because BBR is designed for disaster recovery, its backups are intended to be restored to an environment deployed with the same configuration. 

Spin up a second environment that matches the original environment in the following ways:

* All the MySql passwords, including:
	* passwords for Cloud Controller, UAA and Diego
	* healthcheck passwords
	* admin password
* DB Encryption Key
	* cc.db_encryption_key consumed by cloud_controller_clock, cloud_controller_worker, cloud_controller_ng jobs
	* diego.bbs.encryption_keys.passphrase consumed by bbs job

You can spin up a second environment that matches the original to test a restore, as follows:
1. Export your Ops Manager installation, via Settings -> Export Installation Settings.
1. Create a new Ops Manager VM in a different network to the original and import the installation.
1. On Ops Manager Director -> Create Networks, update the networks as appropriate.
1. SSH into your Ops Manager VM and delete the `/var/tempest/workspaces/default/deployments/bosh-state.json` file.
1. Apply changes to deploy a new BOSH director and a new ERT.

Restore your backup to the second environment with the credentials set as above. 

Run the BBR restore command from your jumpbox to restore your ERT deployment:
<pre class="terminal">
$ BOSH\_CLIENT\_SECRET=BOSH\_CLIENT\_SECRET \
	bbr deployment
	--target BOSH\_DIRECTOR\_IP \
	--username BOSH\_CLIENT \
	--deployment DEPLOYMENT\_NAME \
	--ca-cert PATH\_TO\_BOSH\_SERVER\_CERT \
	restore</pre>

After the restore is completed, you can check the status of your applications by running the command cf apps. Ensure your applications are running. For a more detailed exposition of reviewing your restored CF, see here ***TBD***
The apps would be back up, but under normal circumstances the existing domain will not be pointed to your restored Cloud Foundry. Therefore if you want to make http requests to the restored apps, you have to use the restored CF router IP. However, the restored CF thinks it is on the original domain, so for HTTP requests to be routed to the applications you will have to set the original domain in the Host header.

For example with curl, you could:

```
# if the cf router IP is '10.0.1.16' and the app domain is 'cf-original-app.com'
curl -k -H"Host: cf-original-app.com" https://10.0.1.16
```

The restored apps will have the same service bindings as the original. Therefore if your applications connect to an external data store, your restored applications will also connect, and perform whatever interactions your original applications would do.

We recommend you verify that your restored CF has the same Orgs, Spaces, Applications, Routes and Services as you expect from the CF you backed up.

To see the list of orgs, run `cf orgs`
Target each org in turn. `cf target -o <org>`
To see the list of spaces for this org, run `cf spaces`
Target each space in turn. `cf target -s <space>`
To see the list of routes (and their domains) for this space, run `cf routes`
To see the list of apps for this space, run `cf apps`. Check that the apps which should be running can start successfully.
Ensure that your apps are still bound to the expected services, for this space, run cf services. Backing up Cloud Foundry with BBR doesn’t backup service data.

