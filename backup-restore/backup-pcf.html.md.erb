---
title: Backing Up Pivotal Cloud Foundry Manually
owner: RelEng
---

<strong><%= modified_date %></strong>

<% $this_topic = 'backup-pcf' %>

<p class="note"><strong>Note</strong>: You can use BOSH Backup and Restore (BBR) to back up Pivotal Cloud Foundry (PCF). See the backup instructions <a href="./backup-pcf-bbr.html">here</a>.</p>

This topic describes the procedure for manually backing up each critical backend PCF component. Pivotal recommends frequently backing up your installation settings before making any changes to your PCF deployment, such as configuration of any tiles in Ops Manager.

To back up a deployment, you must do the following:

* Step 1: Record the Cloud Controller database encryption credentials
* Step 2: Export installation settings
* Step 3: Download the BOSH manifest
* Step 4: Temporarily stop the Cloud Controller
* Step 5: Create and export backup files for each critical backend component
* Step 6: Restart the Cloud Controller 

To restore your backup, see the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic.

## <a id='encrypt-key'></a>Step 1: Record the Cloud Controller Database Encryption Credentials ##

Record your Cloud Controller Database encryption credentials. You will need these credentials if you contact Pivotal Support for help restoring your installation, 

From the **Installation Dashboard**, select **Pivotal Elastic Runtime > Credentials** and locate the Cloud Controller section.
Record the Cloud Controller **DB Encryption Credentials**.
You must provide these credentials if you contact Pivotal Support for help
restoring your installation.

<%= image_tag("ccdb-encrypt-creds.png") %>

## <a id='export'></a>Step 2: Export Installation Settings ##

Pivotal recommends that you back up your installation settings by exporting
frequently. This option is only available after you have deployed at least one time.
Always export an installation before following the steps in the [Import Installation Settings](./restore-pcf.html#import) section of the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings. It does not back up your virtual machines (VMs) or any external MySQL databases.</p>

From the **Installation Dashboard** in the Ops Manager interface, click your user name at the top right navigation. Select **Settings**.

**Export installation settings** exports the current PCF installation settings and assets.

<p class="note"><strong>Note</strong>: With Ops Manager 1.12 the exported intallation settings no longer contain packages so the output is much smaller. As a result, the preparation and download of this file should take less than five minutes.</note>

<%= image_tag("settings.png") %>

<p class='note'><strong>Note</strong>: For versions of Ops Manager 1.3 or older, the process of archiving files for export may exceed the timeout limit of 600 seconds and result in a <code>500</code> error. To resolve this issue, you can manually increase the timeout value, or assign additional resources to the Ops Manager VM to improve performance. For more information, see the <a href="https://support.pivotal.io/hc/en-us/articles/206113627">Pivotal Support Knowledge Base</a>.</p>

## <a id="download-bosh-manifest"></a>Step 3: Download the BOSH Manifest

To download the BOSH manifest for your deployment, use the BOSH CLI (either v1 or v2) or access the OpsMan API.

### Using BOSH CLI v1

First, identify and target the BOSH Director by performing the following steps:

<%= partial 'bosh_target_director_manual' %>

Next, download the BOSH manifest for the product by performing the following steps:

<%= partial 'download_bosh_manifest' %>

### Using BOSH CLI v2

First, target the BOSH Director by performing the following steps:

<%= partial 'bosh_target_director_bbr' %>

Next, identify the deployment and download the BOSH manifest for the product by performing the following steps:

1. After logging in to your BOSH Director, run the following command to identify the name of 
the BOSH deployment that contains PCF:
    <pre class="terminal">
    $ bosh -e DIRECTOR\_IP \
    --ca-cert /var/tempest/workspaces/default/root\_ca\_certificate deployments

    Name                     Release(s)
    cf-example               push-apps-manager-release/661.1.24
                             cf-backup-and-restore/0.0.1
                             binary-buildpack/1.0.11
                             capi/1.28.0
                             cf-autoscaling/91
                             cf-mysql/35
                             ...
    </pre>
    In the above example, the name of the BOSH deployment that contains PCF is `cf-example`.

1. Run the following command to download the BOSH manifest and replace DEPLOYMENT-NAME with the deployment name you retrieved in the prevoius step:

    <pre class="terminal">
    $ bosh -e DIRECTOR_IP -d DEPLOYMENT-NAME manifest > /tmp/cf.yml
    </pre>

1. Place the .yml file in a secure location.

### Using the Ops Manager API

First, identify and target the BOSH Director by performing the following steps:

1. Install the [BOSH v2 CLI](https://bosh.io/docs/cli-v2.html#install) on a machine outside of your PCF deployment.
1. Perform the procedures in the [Using the Ops Manager API](../ops-man-api.html) topic to authenticate and access the Ops Manager API.
1. Use the `GET /api/v0/deployed/products` endpoint to retrieve a list of deployed products, replacing `UAA-ACCESS-TOKEN` with the access token recorded in the [Using the Ops Manager API](../ops-man-api.html) topic:
  <pre class="terminal">$ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/deployed/products" \ 
    -X GET \ 
    -H "Authorization: Bearer UAA-ACCESS-TOKEN"</pre>
1. In the response to the above request, locate the product with an `installation_name` starting with `cf-` and copy its `guid`.
1. Run the following `curl` command, replacing `PRODUCT-GUID` with the value of `guid` from the previous step:
    <pre class="terminal">
    $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/deployed/products/PRODUCT-GUID/manifest" \ 
    -X GET \
    -H "Authorization: Bearer UAA-ACCESS-TOKEN" > /tmp/cf.yml</pre>

1. Place the .yml file in a secure location.

## <a id='stop-cc-2'></a>Step 3: Stop Cloud Controller###

To stop the Cloud Controller, use the BOSH CLI (either v1 or v2).

### Using BOSH CLI v1

<%= partial 'stopping_cc' %>

### Using BOSH CLI v2

<%= partial 'stopping_cc_boshv2' %>

## <a id='backup-databases'></a>Step 4: Back Up Critical Backend Components ##

Your Elastic Runtime deployment contains several critical data stores that must be present for a complete restore. This section describes the procedure for backing up the databases and the servers associated with your PCF installation.

You must back up each of the following:

* Cloud Controller Database
* UAA Database
* WebDAV Server
* Pivotal MySQL Server

<p class="note"><strong>Note</strong>: If you are running your databases or filestores externally, ensure that you back up your external databases and filestores. </p>

<p class="note"><strong>Note</strong>: To follow the backup instructions below, your network must be configured to allow access to the BOSH Director VM from your local machine. If you do not have local administrator access, use the <code>scp</code> command to copy the TAR file to the BOSH Director VM. For example:<code> scp vcap@192.0.2.10:webdav.tar.gz \ </code>
and
<code>vcap@192.0.2.3:/webdav.tar.gz</code></p>

### <a id='backup-mysql'></a>Back Up Pivotal MySQL Server ###

<p class="note"><strong>Note</strong>: The Elastic Runtime deploy contains an embedded MySQL Server that serves as the data store for the Application Usage Events, Notifications, and Autoscaler services. If you are using an internal MySQL, this will also include the Cloud Controller and UAA. </p>

There are two ways to backup the MySQL Server:

* [Manual backup](#manual-mysql): If you have not set up automatic backups, you need to do a manual backup of your MySQL server.
* Automatic backup: If you configured automatic backups in your ERT configuration, you do not need to manually backup your MySQL Server. Automatic backup requires S3-compatible blobstores. For more information, see:
  * AWS Manual: [Configure Internal MySQL](../../customizing/pcf-aws-manual-er-config.html#internal-mysql)
  * AWS CloudFormation: [Configure Internal MySQL](../../customizing/cloudform-er-config.html#internal-mysql)
  * OpenStack: [Configure Internal MySQL](../../customizing/openstack-er-config.html#internal-mysql)
  * vSphere [Configure Internal MySQL](../../customizing/config-er-vmware.html#internal-mysql)

#### <a id='manual-mysql'></a>Backing up MySQL Server Manually ####

1. From the **Installation Dashboard** in Ops Manager, select **Pivotal Elastic Runtime**. 

1. Click **Credentials** and record the **Mysql Admin Credentials** of **MySQL Server**.

    <%= image_tag("mysql-cred.png") %>

1. From your local machine, use `bosh ssh` to SSH into the MySQL database VM. <br/>
   **Using BOSH CLI v2**:
    <pre class="terminal">
    $ bosh -e ENVIRONMENT -d DEPLOYMENT-NAME ssh mysql
    </pre>
    For example:
    <pre class="terminal">
    $ bosh -e myenv -d cf-1234567 ssh mysql
    </pre>

1. On the MySQL database VM, run the following command to export data from all the internal MySQL databases used by Elastic Runtime:
    <pre class="terminal">
    $ /var/vcap/packages/mariadb/bin/mysqldump -u root -p \
     --all-databases > /tmp/cf_databases.sql
    </pre>
    When prompted, enter the password you obtained for the **Mysql Admin Credentials**.

1. From your local machine, run `bosh scp` to download the exported databases to your local machine. <br/>
    **Using BOSH CLI v2**:
    <pre class="terminal">
    $ bosh -e ENVIRONMENT -d DEPLOYMENT-NAME \
    scp mysql:/tmp/cf\_databases.sql FILEPATH/cf\_databases.sql
    </pre>
    For example:
    <pre class='terminal'>
    $ bosh -e myenv -d cf-1234567\
    scp mysql:/tmp/cf\_databases.sql ~/cf\_databases.sql
    </pre>

### <a id='webdav'></a>Back Up WebDAV Server ###

1. In the BOSH deployment manifest, locate the `nfs_server` component and record the address:

    ```
    nfs_server:
      address: 192.0.2.10
      network: 192.0.2.0/24
    syslog_aggregator:
      address:
      port:
    ```
    <p class="note"><strong>Note</strong>: The job name associated with the WebDAV server is <code>nfs_server</code> for historical reasons. The server is not based on NFS.</p>

1. From the **Installation Dashboard** in Ops Manager, select **Elastic Runtime** and click **Credentials > Link to Credential**. Record the File Storage server VM credentials.

    <%= image_tag("file-store-creds.png") %>

1. SSH into the WebDAV server VM and create a TAR file:
<pre class='terminal'>
$ ssh vcap<span>@</span>192.0.2.10 'cd /var/vcap/store && tar cz shared' > webdav.tar.gz
</pre>
<p class="note"><strong>Note</strong>: The TAR file that you create to back up WebDAV server might be large. To estimate the size of the TAR file before you create it, run the following command:
<code class=''>ssh vcap<span>@</span>192.0.2.10 tar -cf - /dir/to/archive/ | wc -c</code></p>

## <a id='cc-start'></a>Step 5: Start Cloud Controller ###

To start the Cloud Controller, use the BOSH CLI (either v1 or v2).

### Using BOSH CLI v1

<%= partial 'starting_cc' %>

### Using BOSH CLI v2

<%= partial 'starting_cc_boshv2' %>

Follow the steps in the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic to restore a backup, import an installation to restore your settings, or to share your settings with another user.

