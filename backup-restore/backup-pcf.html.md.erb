---
title: Backing Up Pivotal Cloud Foundry
owner: RelEng
---

<strong><%= modified_date %></strong>

<% $this_topic = 'backup-pcf' %>

This topic describes the procedure for manually backing up each critical backend PCF component. Pivotal recommends frequently backing up your installation settings before making any changes to your PCF deployment, such as configuration of any tiles in Ops Manager.

To back up a deployment, you must do the following:

* Export installation settings
* Download the BOSH Deployment Manifest
* Temporarily stop the Cloud Controller
* Create and export backup files for each critical backend component
* Restart the Cloud Controller 

To back up a deployment, export installation settings, download the BOSH Deployment Manifest, temporarily stop the Cloud Controller, create and export backup files for each critical backend component, and restart the Cloud Controller. It is also important to record your Cloud Controller Database encryption credentials which you will need if you contact Pivotal Support for help restoring your installation.

To restore your backup, see the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic.

## <a id='encrypt-key'></a>Record the Cloud Controller Database Encryption Credentials ##

From the **Installation Dashboard**, select **Pivotal Elastic Runtime > Credentials** and locate the Cloud Controller section.
Record the Cloud Controller **DB Encryption Credentials**.
You must provide these credentials if you contact Pivotal Support for help
restoring your installation.

<%= image_tag("ccdb-encrypt-creds.png") %>

## <a id='export'></a>Export Installation Settings ##

Pivotal recommends that you back up your installation settings by exporting
frequently. This option is only available after you have deployed at least one time.
Always export an installation before following the steps in the [Import Installation Settings](./restore-pcf.html#import) section of the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic.

<p class="note"><strong>Note</strong>: Exporting your installation only backs up your installation settings. It does not back up your virtual machines (VMs) or any external MySQL databases.</p>

From the **Installation Dashboard** in the Ops Manager interface, click your user name at the top right navigation. Select **Settings**.

**Export installation settings** exports the current PCF installation
settings and assets.
When you export an installation, the exported file contains the base VM images,
all necessary packages, and references to the installation IP addresses.
As a result, an exported installation file can exceed 5 GB in size.

<%= image_tag("settings.png") %>

<p class='note'><strong>Note</strong>: For versions of Ops Manager 1.3 or older, the process of archiving files for export may exceed the timeout limit of 600 seconds and result in a <code>500</code> error. To resolve this issue, you can manually increase the timeout value, or assign additional resources to the Ops Manager VM to improve performance. For more information, see the <a href="https://support.pivotal.io/hc/en-us/articles/206113627">Pivotal Support Knowledge Base</a>.</p>

## <a id="bosh-target-director"></a> Target the BOSH Director
<%= partial 'bosh_target_director' %>

## <a id="download-bosh-manifest"></a>Download BOSH Manifest
<%= partial 'download_bosh_manifest' %>

## <a id='backup-databases'></a>Back Up Critical Backend Components ##

Your Elastic Runtime deployment contains several critical data stores that must be present for a complete restore. This section describes the procedure for backing up the databases and the servers associated with your PCF installation.

You must back up each of the following:

* Cloud Controller Database
* UAA Database
* WebDAV Server
* Pivotal MySQL Server

<p class="note"><strong>Note</strong>: If you are running your databases or filestores externally, ensure that you back up your external databases and filestores. </p>

<p class="note"><strong>Note</strong>: To follow the backup instructions below, your network must be configured to allow access to the BOSH Director VM from your local machine. If you do not have local administrator access, use the <code>scp</code> command to copy the TAR file to the BOSH Director VM. For example:<code> scp vcap@192.0.2.10:webdav.tar.gz \ </code>
and
<code>vcap@192.0.2.3:/webdav.tar.gz</code></p>

### <a id='stop-cc-2'></a>Stop Cloud Controller###
<%= partial './stopping_cc' %>

### <a id='ccdb'></a>Back Up the Cloud Controller Database ###

 <p class="note"><strong>Note</strong>: Follow these instructions only if you are using a PostgreSQL database. 
 If you are using internal MySQL for your Elastic Runtime databases, see [Back Up Pivotal MySQL Server](#backup-mysql) instead. </p>

1. In the BOSH deployment manifest, locate the Cloud Controller database (CCDB) component under the `ccdb` key and record the IP address:

    ```
    ccdb:
        address: 192.0.2.96
        port: 2544
        db_scheme: postgres
    ```
1. From the **Installation Dashboard** in Ops Manager, select **Elastic Runtime** and click **Credentials > Link to Credential**. Record the Cloud Controller database VM credentials.

    <%= image_tag("ccdb-creds.png") %>

1. SSH into the Cloud Controller database VM as the admin using the IP address and password recorded in the previous steps.

    <pre class="terminal">
    $ ssh vcap@192.0.2.96
    Password:***********
    </pre>

1. Run `find /var/vcap | grep 'bin/pg_dump'` to find the locally installed psql client on the CCDB VM. For example:
<pre class="terminal">
$ root<span>@</span>192.0.2.96:~# find /var/vcap | grep 'bin/pg\_dump'
/var/vcap/data/packages/postgres/5.1/bin/pg\_dump
</pre>

1. Run `pg_dump` from the locally installed psql client to export the database:
<pre class="terminal">
$ /var/vcap/data/packages/postgres/5.1/bin/pg_dump -h 192.0.2.96 -U admin -p 2544 ccdb > ccdb.sql
</pre>

1. Exit from the Cloud Controller database VM.

1. Run `scp` to copy the exported database to your local machine.
<pre class="terminal">
$ scp vcap<span>@</span>192.0.2.96:~/ccdb.sql .
</pre>

### <a id='backup-uaadb'></a>Back Up the UAA Database ###

<p class="note"><strong>Note</strong>: Follow these instructions only if you are using a PostgreSQL database. 
 If you are using internal MySQL for your Elastic Runtime databases, see [Back Up Pivotal MySQL Server](#backup-mysql) instead. </p>

1. In the BOSH deployment manifest, locate the `uaadb` component and record the IP address:

    ```
    uaadb:
      address: 192.0.2.101
      port: 2544
      db_scheme: postgresql
    ```
1. From the **Installation Dashboard** in Ops Manager, select **Elastic Runtime** and click **Credentials > Link to Credential**. Record the UAA database VM credentials.

    <%= image_tag("uaadb-creds.png") %>

1. SSH into the UAA database VM as the admin using the IP address and password recorded in the previous steps.

1. Run `find /var/vcap | grep 'bin/pg_dump'` to find the locally installed psql client on the UAA database VM.
<pre class='terminal'>
$ root<span>@</span>192.0.2.101:~# find /var/vcap | grep 'bin/pg\_dump'
    /var/vcap/data/packages/postgres/5.1/bin/pg\_dump
</pre>

1. Run `pg_dump` from the locally installed psql client to export the database:
<pre class='terminal'>
$ /var/vcap/data/packages/postgres/5.1/bin/pg_dump -h 192.0.2.101 -U root -p 2544 uaa > uaa.sql
 </pre>

1. Exit from the UAA database VM.


### <a id='backup-mysql'></a>Back Up Pivotal MySQL Server ###

<p class="note"><strong>Note</strong>: The Elastic Runtime deploy contains an embedded MySQL Server that serves as the data store for the Application Usage Events, Notifications, and Autoscaler services. If you are using an internal MySQL, this will also include the Cloud Controller and UAA. </p>

There are two ways to backup the MySQL Server:

* [Manual backup](#manual-mysql): If you have not set up automatic backups, you need to do a manual backup of your MySQL server.
* Automatic backup: If you configured automatic backups in your ERT configuration, you do not need to manually backup your MySQL Server. Automatic backup requires S3-compatible blobstores. For more information, see:
  * AWS Manual: [Configure Internal MySQL](../../customizing/pcf-aws-manual-er-config.html#internal-mysql)
  * AWS CloudFormation: [Configure Internal MySQL](../../customizing/cloudform-er-config.html#internal-mysql)
  * OpenStack: [Configure Internal MySQL](../../customizing/openstack-er-config.html#internal-mysql)
  * vSphere [Configure Internal MySQL](../../customizing/config-er-vmware.html#internal-mysql)

#### <a id='manual-mysql'></a>Backing up MySQL Server Manually ####

1. From the **Installation Dashboard** in Ops Manager, select **Pivotal Elastic Runtime**.
1. Click **Credentials** and record the **Mysql Admin Credentials** of **MySQL Server**.

    <%= image_tag("mysql-cred.png") %>

1. From your local machine, use `bosh ssh` to SSH into the MySQL database VM. Using the BOSH v2 CLI command:
    <pre class="terminal">
    $ bosh -e ENVIRONMENT -d DEPLOYMENT-NAME ssh mysql
    </pre>
    For example:
    <pre class="terminal">
    $ bosh -e myenv -d cf-1234567 ssh mysql
    </pre>

1. On the MySQL database VM, run the following command to export data from all the internal MySQL databases used by Elastic Runtime:
    <pre class="terminal">
    $ /var/vcap/packages/mariadb/bin/mysqldump -u root -p \
     --all-databases > /tmp/cf_databases.sql
    </pre>
    When prompted, enter the password you obtained for the **Mysql Admin Credentials**.

1. From your local machine, run `bosh scp` to download the exported databases to your local machine. Using the BOSH v2 CLI command:
    <pre class="terminal">
    $ bosh -e ENVIRONMENT -d DEPLOYMENT-NAME \
    scp mysql:/tmp/cf\_databases.sql FILEPATH/cf\_databases.sql
    </pre>
    For example:
    <pre class='terminal'>
    $ bosh2 -e myenv -d cf-1234567\
    scp mysql:/tmp/cf\_databases.sql ~/cf\_databases.sql
    </pre>

### <a id='webdav'></a>Back Up WebDAV Server ###

1. In the BOSH deployment manifest, locate the `nfs_server` component and record the address:

    ```
    - name: nfs_server
    ...
      networks:
      - name: pcfnetwork
        default:
        - dns
        - gateway
        static_ips:
        - 172.20.7.25
    ```
    <p class="note"><strong>Note</strong>: The job name associated with the WebDAV server is <code>nfs_server</code> for historical reasons. The server is not based on NFS.</p>

1. From the **Installation Dashboard** in Ops Manager, select **Elastic Runtime** and click **Credentials > Link to Credential**. Record the File Storage server VM credentials.

    <%= image_tag("file-store-creds.png") %>

1. SSH into the WebDAV server VM and create a TAR file:
<pre class='terminal'>
$ ssh vcap<span>@</span>192.0.2.10 'cd /var/vcap/store && tar cz shared' > webdav.tar.gz
</pre>
<p class="note"><strong>Note</strong>: The TAR file that you create to back up WebDAV server might be large. To estimate the size of the TAR file before you create it, run the following command:
<code class=''>ssh vcap<span>@</span>192.0.2.10 tar -cf - /dir/to/archive/ | wc -c</code></p>

### <a id='cc-start'></a>Start Cloud Controller ###
<%= partial './starting_cc' %>

Follow the steps in the [Restoring Pivotal Cloud Foundry from Backup](./restore-pcf.html) topic to restore a backup, import an installation to restore your settings, or to share your settings with another user.

